(function() {
    var implementors = Object.fromEntries([["argmin",[]],["argmin_observer_paramwriter",[["impl&lt;I&gt; <a class=\"trait\" href=\"argmin/core/observers/trait.Observe.html\" title=\"trait argmin::core::observers::Observe\">Observe</a>&lt;I&gt; for <a class=\"struct\" href=\"argmin_observer_paramwriter/struct.ParamWriter.html\" title=\"struct argmin_observer_paramwriter::ParamWriter\">ParamWriter</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"argmin/core/state/trait.State.html\" title=\"trait argmin::core::state::State\">State</a>,\n    &lt;I as <a class=\"trait\" href=\"argmin/core/state/trait.State.html\" title=\"trait argmin::core::state::State\">State</a>&gt;::<a class=\"associatedtype\" href=\"argmin/core/state/trait.State.html#associatedtype.Param\" title=\"type argmin::core::state::State::Param\">Param</a>: <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.225/serde_core/ser/trait.Serialize.html\" title=\"trait serde_core::ser::Serialize\">Serialize</a>,</div>"]]],["argmin_observer_slog",[["impl&lt;I&gt; <a class=\"trait\" href=\"argmin/core/observers/trait.Observe.html\" title=\"trait argmin::core::observers::Observe\">Observe</a>&lt;I&gt; for <a class=\"struct\" href=\"argmin_observer_slog/struct.SlogLogger.html\" title=\"struct argmin_observer_slog::SlogLogger\">SlogLogger</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"argmin/core/state/trait.State.html\" title=\"trait argmin::core::state::State\">State</a>,</div>"]]]]);
    if (window.register_implementors) {
        window.register_implementors(implementors);
    } else {
        window.pending_implementors = implementors;
    }
})()
//{"start":57,"fragment_lengths":[13,952,483]}