searchState.loadedDescShard("spectator", 0, "Spectator is a GUI tool to observe the progress of an …\nCurrent best parameter vector\nDefault port used by spectator\nFunction evaluation counts (Cost function, gradient, …\nEnum used to encode information sent to spectator.\nRegister a new run\nParameter vector\nA set of metrics samples sent after an iteration\nTermination\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSerialize message\nDeserialize message\nInitial parameter vector\nCurrent iteration\nCurrent iteration\nCurrent iteration\nCurrent iteration\nSolver-specific metrics\nFunction counts\nMaximum number of iterations\nName of the run\nName of the run\nName of the run\nName of the run\nName of the run\nName of the run\nCurrent parameter vector\nCurrent best parameter vector\nPreselected metrics\nSolver-specific settings (returned by the <code>init</code> method of …\nName of the solver\nTarget cost function value\nCurrent termination_status\nTermination status\nTime needed for this iteration")