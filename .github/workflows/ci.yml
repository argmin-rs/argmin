name: argmin CI

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  tests-argmin:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Test (default features)
        run: cargo test -p argmin --verbose
      - name: Test (all features)
        run: cargo test -p argmin --verbose --all-features

  tests-argmin-serde1-feature:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Test (no default features)
        run: cargo test -p argmin --verbose --no-default-features
      - name: Test with serde1 feature
        run: cargo test -p argmin --verbose --no-default-features --features "serde1"
      - name: Test with slog-logger feature
        run: cargo test -p argmin --verbose --no-default-features --features "slog-logger"

  tests-argmin-math:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        feature:
          - primitives
          - vec
          - ndarray_latest-serde
          - ndarray_v0_15-serde
          - ndarray_v0_14-serde
          - ndarray_v0_13-serde
          - nalgebra_latest-serde
          - nalgebra_v0_31-serde
          - nalgebra_v0_30-serde
          - nalgebra_v0_29-serde
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy
      - name: Test 
        run: cargo test -p argmin-math --no-default-features --features ${{ matrix.feature }}

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: beta
          override: true
          components: clippy
      - name: Clippy (argmin-math)
        run: cargo clippy -p argmin-math --all-targets --features "primitives,vec,nalgebra_latest-serde,ndarray_latest-serde" -- -D warnings
      - name: Clippy (argmin) with default features
        run: cargo clippy -p argmin --all-targets -- -D warnings
      - name: Clippy (argmin) without default features
        run: cargo clippy -p argmin --all-targets --no-default-features -- -D warnings
      - name: Clippy (argmin) without serde1 feature
        run: cargo clippy -p argmin --all-targets --no-default-features --features="slog-logger" -- -D warnings
      - name: Clippy (argmin) with all features
        run: cargo clippy -p argmin --all-targets --all-features -- -D warnings

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  docs-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: argmin docs
        run: cargo rustdoc -p argmin --all-features -- -D warnings
      - name: argmin-math docs
        run: cargo rustdoc -p argmin-math --features "latest_all" -- -D warnings
  
  wasm-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Install toolchains
        run: |
          rustup target add wasm32-unknown-unknown
          rustup target add wasm32-unknown-emscripten
          rustup target add wasm32-wasi
      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh 
      - name: Build target wasm32-unknown-unknown
        run: cargo build --target wasm32-unknown-unknown --features wasm-bindgen
      - name: Build target wasm32-wasi with feature wasm-bindgen
        run: cargo build --target wasm32-wasi --features wasm-bindgen
      - name: Build target wasm32-unknown-emscripten
        run: cargo build --target wasm32-unknown-emscripten --no-default-features --features wasm-bindgen
