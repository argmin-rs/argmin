var searchIndex = new Map(JSON.parse('[\
["argmin",{"t":"QQQQCQQCNNNGKPPPKFFPRRKRKRPPPPFKRFGEKFPEPPPKFRRRRRRRRRFPFKKPPKPKPPGGPEPNNMNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOOONNNOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNNNNMNNNNMNNNNNNMNNNNNNNMNNNNMNNNMNNNMNNNNNNNNNNNNNNNNNNNNMNNNNNMNNNMNNNMNNNNOMNNNNMNNOMNNNNONNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNOOOMNNONNOOOOCNNNOOONNMMNNNNNNNNMCNNNNNNNNNNNNOONNOOOOOOOOOOOOOOOOOONNOONNONNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNOOONNNNMNNNNNNOOOCNMNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNOOOOOOOPKGPPNNNNNNNNMNNNNNMMNNNNNNNNNPPPPKGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCCCCCCCCCCCFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFKFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNFFKFNNNNNNNNNNNNCNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFKFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKPPRRRGFPMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["argmin_error","argmin_error_closure","bulk","check_param","core","float","kv","solver","A","A","A","ArgminError","ArgminFloat","Bool","CheckpointNotFound","ConditionViolated","CostFunction","Error","Executor","Float","Float","Float","Gradient","Gradient","Hessian","Hessian","ImpossibleError","Int","Interrupt","InvalidParameter","IterState","Jacobian","Jacobian","KV","KvValue","LineSearch","LinearProgram","LinearProgramState","MaxItersReached","NLCGBetaUpdate","NotImplemented","NotInitialized","NotTerminated","Operator","OptimizationResult","Output","Output","Param","Param","Param","Param","Param","Param","Param","PopulationState","PotentialBug","Problem","SendAlias","Solver","SolverConverged","SolverExit","State","Str","SyncAlias","TargetCostReached","Terminated","TerminationReason","TerminationStatus","Timeout","TrustRegionRadius","Uint","add_observer","anneal","apply","apply","as_ref","as_ref","as_string","b","b","b","backtrace","best_cost","best_cost","best_cost","best_individual","best_param","best_param","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bulk_apply","bulk_apply","bulk_apply","bulk_cost","bulk_cost","bulk_cost","bulk_gradient","bulk_gradient","bulk_gradient","bulk_hessian","bulk_hessian","bulk_hessian","bulk_jacobian","bulk_jacobian","bulk_jacobian","bulk_problem","c","c","c","chain","checkpointing","checkpointing","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","configure","consume_func_counts","consume_problem","context","cost","cost","cost","cost","cost","cost","cost","cost","counting","counting","counting","counting_enabled","counting_enabled","counting_enabled","counts","counts","counts","counts","ctrlc","default","default","default","default","default","default","deref","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","downcast","downcast_mut","downcast_ref","drop","eq","eq","eq","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","func_counts","func_counts","func_counts","func_counts","get","get_best_cost","get_best_cost","get_best_cost","get_best_cost","get_best_cost","get_best_cost","get_best_param","get_best_param","get_best_param","get_best_param","get_bool","get_cost","get_cost","get_cost","get_cost","get_cost","get_cost","get_float","get_func_counts","get_func_counts","get_func_counts","get_func_counts","get_gradient","get_hessian","get_int","get_inv_hessian","get_iter","get_iter","get_iter","get_iter","get_jacobian","get_last_best_iter","get_last_best_iter","get_last_best_iter","get_last_best_iter","get_max_iters","get_max_iters","get_max_iters","get_max_iters","get_param","get_param","get_param","get_param","get_population","get_prev_best_cost","get_prev_best_cost","get_prev_best_individual","get_prev_best_param","get_prev_cost","get_prev_cost","get_prev_gradient","get_prev_hessian","get_prev_individual","get_prev_inv_hessian","get_prev_jacobian","get_prev_param","get_prev_residuals","get_problem","get_residuals","get_string","get_target_cost","get_target_cost","get_target_cost","get_target_cost","get_target_cost","get_target_cost","get_termination_reason","get_termination_reason","get_termination_reason","get_termination_reason","get_termination_status","get_termination_status","get_termination_status","get_termination_status","get_time","get_time","get_time","get_time","get_uint","grad","gradient","gradient","gradient","hash","hash","hessian","hessian","hessian","hessian","increment_iter","increment_iter","increment_iter","increment_iter","individual","individual","init","init","insert","into","into","into","into","into","into","into","into","into","into","into","into","inv_hessian","inv_hessian","is","is_best","is_best","is_best","is_best","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","iter","iter","iter","jacobian","jacobian","jacobian","jacobian","keys","kind","kv","last_best_iter","last_best_iter","last_best_iter","macros","max_iters","max_iters","max_iters","max_iters","max_iters","max_iters","merge","msg","name","new","new","new","new","new","new","new","new","new","next_iter","observers","parallelize","parallelize","parallelize","parallelize","parallelize","parallelize","parallelize","parallelize","parallelize","parallelize","param","param","param","param","partial_cmp","population","population","prev_best_cost","prev_best_cost","prev_best_cost","prev_best_individual","prev_best_param","prev_best_param","prev_cost","prev_cost","prev_cost","prev_grad","prev_hessian","prev_individual","prev_inv_hessian","prev_jacobian","prev_param","prev_param","prev_residuals","problem","problem","problem","problem","reset","residuals","residuals","root_cause","run","serialize","serialize","serialize","serialize","serialize","serialize","serialize","solver","solver","state","state","take_best_individual","take_best_param","take_gradient","take_hessian","take_individual","take_inv_hessian","take_jacobian","take_param","take_population","take_prev_best_individual","take_prev_best_param","take_prev_gradient","take_prev_hessian","take_prev_individual","take_prev_inv_hessian","take_prev_jacobian","take_prev_param","take_prev_residuals","take_problem","take_residuals","target_cost","target_cost","target_cost","target_cost","target_cost","target_cost","terminate","terminate","terminate_internal","terminate_internal","terminate_with","terminate_with","terminate_with","terminate_with","terminated","terminated","terminated","termination_status","termination_status","termination_status","test_utils","text","time","time","time","time","time","time","time","timeout","timer","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","update","update","update","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","text","text","text","text","text","text","text","Always","Checkpoint","CheckpointingFrequency","Every","Never","borrow","borrow_mut","clone","clone_into","default","eq","fmt","fmt","frequency","from","from_subset","hash","into","is_in_subset","load","save","save_cond","to_owned","to_string","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","Always","Every","Never","NewBest","Observe","ObserverMode","Observers","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deserialize","eq","fmt","from","from","from_subset","from_subset","into","into","is_empty","is_in_subset","is_in_subset","new","observe_final","observe_final","observe_init","observe_init","observe_iter","observe_iter","push","serialize","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","TestProblem","TestSolver","TestSparseProblem","anneal","apply","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cost","cost","default","default","default","deserialize","deserialize","deserialize","eq","eq","eq","fmt","fmt","fmt","from","from","from","from_subset","from_subset","from_subset","gradient","gradient","hash","hash","hessian","into","into","into","is_in_subset","is_in_subset","is_in_subset","jacobian","name","new","new","new","next_iter","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","brent","conjugategradient","gaussnewton","goldensectionsearch","gradientdescent","landweber","linesearch","neldermead","newton","particleswarm","quasinewton","simulatedannealing","trustregion","BrentOpt","BrentRoot","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","from","from","from_subset","from_subset","init","init","into","into","is_in_subset","is_in_subset","name","name","new","new","next_iter","next_iter","serialize","serialize","set_tolerance","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ConjugateGradient","NonlinearConjugateGradient","beta","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","from","from","from_subset","from_subset","get_prev_p","init","init","into","into","is_in_subset","is_in_subset","name","name","new","new","next_iter","next_iter","restart_iters","restart_orthogonality","serialize","serialize","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","FletcherReeves","HestenesStiefel","NLCGBetaUpdate","PolakRibiere","PolakRibierePlus","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","default","deserialize","deserialize","deserialize","deserialize","fmt","fmt","fmt","fmt","from","from","from","from","from_subset","from_subset","from_subset","from_subset","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","new","new","new","new","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update","update","update","update","update","vzip","vzip","vzip","vzip","GaussNewton","GaussNewtonLS","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deserialize","deserialize","from","from","from_subset","from_subset","init","into","into","is_in_subset","is_in_subset","name","name","new","new","next_iter","next_iter","serialize","serialize","terminate","terminate","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_gamma","with_tolerance","with_tolerance","GoldenSectionSearch","borrow","borrow_mut","clone","clone_into","deserialize","from","from_subset","init","into","is_in_subset","name","new","next_iter","serialize","terminate","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","with_tolerance","SteepestDescent","borrow","borrow_mut","clone","clone_into","deserialize","from","from_subset","into","is_in_subset","name","new","next_iter","serialize","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","Landweber","borrow","borrow_mut","clone","clone_into","deserialize","from","from_subset","into","is_in_subset","name","new","next_iter","serialize","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","BacktrackingLineSearch","HagerZhangLineSearch","LineSearch","MoreThuenteLineSearch","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","condition","default","default","deserialize","deserialize","deserialize","eq","fmt","from","from","from","from_subset","from_subset","from_subset","init","init","init","initial_step_length","initial_step_length","initial_step_length","initial_step_length","into","into","into","is_in_subset","is_in_subset","is_in_subset","name","name","name","new","new","new","next_iter","next_iter","next_iter","rho","search_direction","search_direction","search_direction","search_direction","serialize","serialize","serialize","terminate","terminate","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_bounds","with_bounds","with_c","with_delta_sigma","with_epsilon","with_eta","with_gamma","with_theta","with_width_tolerance","ArmijoCondition","GoldsteinCondition","LineSearchCondition","StrongWolfeCondition","WolfeCondition","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","default","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","evaluate_condition","evaluate_condition","evaluate_condition","evaluate_condition","evaluate_condition","fmt","fmt","fmt","fmt","from","from","from","from","from_subset","from_subset","from_subset","from_subset","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","new","new","new","new","requires_current_gradient","requires_current_gradient","requires_current_gradient","requires_current_gradient","requires_current_gradient","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","NelderMead","borrow","borrow_mut","clone","clone_into","deserialize","from","from_subset","init","into","is_in_subset","name","new","next_iter","serialize","terminate","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","with_alpha","with_gamma","with_rho","with_sd_tolerance","with_sigma","Newton","NewtonCG","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deserialize","deserialize","from","from","from_subset","from_subset","into","into","is_in_subset","is_in_subset","name","name","new","new","next_iter","next_iter","serialize","serialize","terminate","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_curvature_threshold","with_gamma","with_tolerance","Particle","ParticleSwarm","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cost","deserialize","deserialize","eq","fmt","from","from","from_subset","from_subset","init","into","into","is_in_subset","is_in_subset","name","new","new","next_iter","position","serialize","serialize","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_cognitive_factor","with_inertia_factor","with_rng_generator","with_social_factor","BFGS","DFP","LBFGS","SR1","SR1TrustRegion","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","deserialize","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","into","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","name","name","name","name","name","new","new","new","new","new","next_iter","next_iter","next_iter","next_iter","next_iter","serialize","serialize","serialize","serialize","serialize","terminate","terminate","terminate","terminate","terminate","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_denominator_factor","with_denominator_factor","with_eta","with_l1_regularization","with_radius","with_tolerance_cost","with_tolerance_cost","with_tolerance_cost","with_tolerance_grad","with_tolerance_grad","with_tolerance_grad","with_tolerance_grad","with_tolerance_grad","Anneal","Boltzmann","Exponential","Float","Output","Param","SATempFunc","SimulatedAnnealing","TemperatureFast","anneal","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deserialize","deserialize","eq","fmt","from","from","from_subset","from_subset","init","into","into","is_in_subset","is_in_subset","name","new","new_with_rng","next_iter","serialize","serialize","terminate","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_reannealing_accepted","with_reannealing_best","with_reannealing_fixed","with_stall_accepted","with_stall_best","with_temp_func","CauchyPoint","Dogleg","Steihaug","TrustRegion","TrustRegionRadius","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","deserialize","deserialize","deserialize","deserialize","eq","eq","fmt","fmt","from","from","from","from","from_subset","from_subset","from_subset","from_subset","init","init","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","name","name","name","name","new","new","new","new","next_iter","next_iter","next_iter","next_iter","partial_cmp","partial_cmp","reduction_ratio","serialize","serialize","serialize","serialize","set_radius","set_radius","set_radius","set_radius","terminate","terminate","terminate","terminate","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","with_epsilon","with_eta","with_max_iters","with_max_radius","with_radius"],"q":[[0,"argmin"],[8,"argmin::core"],[621,"argmin::core::ArgminError"],[628,"argmin::core::checkpointing"],[658,"argmin::core::observers"],[710,"argmin::core::test_utils"],[788,"argmin::solver"],[801,"argmin::solver::brent"],[846,"argmin::solver::conjugategradient"],[894,"argmin::solver::conjugategradient::beta"],[984,"argmin::solver::gaussnewton"],[1033,"argmin::solver::goldensectionsearch"],[1057,"argmin::solver::gradientdescent"],[1078,"argmin::solver::landweber"],[1099,"argmin::solver::linesearch"],[1191,"argmin::solver::linesearch::condition"],[1290,"argmin::solver::neldermead"],[1318,"argmin::solver::newton"],[1365,"argmin::solver::particleswarm"],[1414,"argmin::solver::quasinewton"],[1542,"argmin::solver::simulatedannealing"],[1601,"argmin::solver::trustregion"],[1711,"argmin::core::problem"],[1712,"alloc::vec"],[1713,"anyhow"],[1714,"core::result"],[1715,"argmin::core::float"],[1716,"argmin::core::executor"],[1717,"argmin::core::state"],[1718,"argmin::core::solver"],[1719,"core::error"],[1720,"argmin::core::kv"],[1721,"alloc::string"],[1722,"std::backtrace"],[1723,"core::borrow"],[1724,"argmin::core::parallelization"],[1725,"core::ops::function"],[1726,"core::clone"],[1727,"argmin::core::result"],[1728,"argmin::core::state::iterstate"],[1729,"argmin::core::state::linearprogramstate"],[1730,"argmin::core::state::populationstate"],[1731,"argmin::core::termination"],[1732,"core::cmp"],[1733,"core::fmt"],[1734,"core::marker"],[1735,"core::default"],[1736,"serde::de"],[1737,"core::option"],[1738,"core::iter::traits::collect"],[1739,"argmin::core::errors"],[1740,"core::convert"],[1741,"std::collections::hash::map"],[1742,"core::time"],[1743,"core::hash"],[1744,"serde::ser"],[1745,"core::any"],[1746,"argmin::solver::brent::brentopt"],[1747,"argmin::solver::brent::brentroot"],[1748,"argmin::solver::conjugategradient::cg"],[1749,"argmin::solver::conjugategradient::nonlinear_cg"],[1750,"argmin_math"],[1751,"argmin::solver::gaussnewton::gaussnewton_linesearch"],[1752,"argmin::solver::gaussnewton::gaussnewton_method"],[1753,"argmin::solver::gradientdescent::steepestdescent"],[1754,"argmin::solver::linesearch::backtracking"],[1755,"argmin::solver::linesearch::hagerzhang"],[1756,"argmin::solver::linesearch::morethuente"],[1757,"argmin::solver::linesearch::condition::armijo"],[1758,"argmin::solver::linesearch::condition::goldstein"],[1759,"argmin::solver::linesearch::condition::strongwolfe"],[1760,"argmin::solver::linesearch::condition::wolfe"],[1761,"core::iter::traits::accum"],[1762,"argmin::solver::newton::newton_cg"],[1763,"argmin::solver::newton::newton_method"],[1764,"rand::rng"],[1765,"rand::rngs::std"],[1766,"argmin::solver::quasinewton::bfgs"],[1767,"argmin::solver::quasinewton::dfp"],[1768,"argmin::solver::quasinewton::lbfgs"],[1769,"argmin::solver::quasinewton::sr1"],[1770,"argmin::solver::quasinewton::sr1_trustregion"],[1771,"rand_xoshiro::xoshiro256plusplus"],[1772,"argmin::solver::trustregion::cauchypoint"],[1773,"argmin::solver::trustregion::dogleg"],[1774,"argmin::solver::trustregion::steihaug"],[1775,"argmin::solver::trustregion::trustregion_method"]],"i":[0,0,0,0,0,0,0,0,3,3,9,0,0,20,63,63,0,0,0,20,3,12,0,28,0,30,63,20,45,63,0,0,32,0,0,0,0,0,45,0,63,63,44,0,0,18,26,18,26,28,30,32,3,12,0,63,0,0,0,45,45,0,20,0,45,44,0,0,45,0,20,10,9,18,9,6,6,20,3,3,9,6,41,42,43,43,41,42,10,6,63,20,38,9,40,41,42,43,44,45,10,6,63,20,38,9,40,41,42,43,44,45,18,18,9,26,26,9,28,28,9,30,30,9,32,32,9,9,3,3,9,6,0,10,20,38,9,40,41,42,43,44,45,20,38,9,40,41,42,43,44,45,40,10,9,9,6,26,9,41,42,43,41,42,43,41,42,43,41,42,43,9,41,42,43,10,38,9,41,43,44,45,6,6,20,38,41,42,43,44,45,6,6,6,6,20,38,40,41,43,44,45,38,6,6,63,63,20,20,38,38,9,40,41,42,43,44,44,45,45,10,6,6,6,63,20,20,20,20,20,20,20,20,20,20,38,9,40,41,42,43,44,45,38,10,6,63,20,38,9,40,41,42,43,44,45,12,41,42,43,38,12,41,41,42,43,43,12,41,42,43,20,12,41,41,42,43,43,20,12,41,42,43,41,41,20,41,12,41,42,43,41,12,41,42,43,12,41,42,43,12,41,42,43,43,41,43,43,41,41,43,41,41,43,41,41,41,41,9,41,20,12,41,41,42,43,43,12,41,42,43,12,41,42,43,12,41,42,43,20,41,28,9,41,44,45,30,9,41,41,12,41,42,43,43,43,13,13,38,10,6,63,20,38,9,40,41,42,43,44,45,41,41,6,12,41,42,43,10,6,63,20,38,9,40,41,42,43,44,45,41,42,43,32,9,41,41,38,20,38,41,42,43,0,41,42,43,41,42,43,38,6,13,12,10,6,38,9,40,41,42,43,13,0,18,18,26,26,28,28,30,30,32,32,41,42,41,42,40,43,43,41,42,43,43,41,42,41,42,43,41,41,43,41,41,41,42,41,9,40,9,40,9,41,41,6,10,20,38,41,42,43,44,45,40,40,40,40,43,41,41,41,43,41,41,41,43,43,41,41,41,43,41,41,41,41,9,41,41,42,43,41,42,43,13,13,13,13,12,41,42,43,12,12,44,41,42,43,0,45,12,41,42,43,41,42,43,10,10,20,38,9,40,41,42,43,44,45,6,63,20,38,40,44,45,10,6,63,20,38,9,40,41,42,43,44,45,10,6,63,20,38,9,40,41,42,43,44,45,10,6,63,20,38,9,40,41,42,43,44,45,10,6,63,20,38,9,40,41,42,43,44,45,10,6,63,20,38,9,40,41,42,43,44,45,12,41,42,43,10,6,63,20,38,9,40,41,42,43,44,45,145,146,147,148,149,150,151,79,0,0,79,79,79,79,79,79,79,79,79,79,37,79,79,79,79,79,37,37,37,79,79,79,79,79,79,79,79,11,11,11,11,0,0,0,80,11,80,11,80,11,80,11,80,11,11,11,11,80,11,80,11,80,11,80,80,11,80,14,80,14,80,14,80,80,11,80,11,80,11,80,11,80,11,80,11,80,11,80,11,0,0,0,81,81,81,82,83,81,82,83,81,82,83,81,82,83,81,82,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,81,82,81,82,81,81,82,83,81,82,83,81,83,81,82,83,83,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,84,85,84,85,84,85,84,85,84,85,84,85,84,85,0,0,0,86,87,86,87,86,87,86,87,86,87,86,87,86,87,86,86,87,86,87,86,87,86,87,86,87,86,87,87,87,86,87,86,87,86,87,86,87,86,87,86,87,86,87,86,87,0,0,0,0,0,97,98,99,100,97,98,99,100,97,98,99,100,97,98,99,100,97,98,99,100,97,98,99,100,97,98,99,100,97,98,99,100,97,98,99,100,97,98,99,100,97,98,99,100,97,98,99,100,97,98,99,100,97,98,99,100,97,98,99,100,97,98,99,100,97,98,99,100,97,98,99,100,97,98,99,100,96,97,98,99,100,97,98,99,100,0,0,101,102,101,102,101,102,101,102,102,101,102,101,102,101,102,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,102,101,102,0,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,0,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,0,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,0,0,0,0,108,109,110,108,109,110,108,109,110,108,109,110,0,109,110,108,109,110,108,108,108,109,110,108,109,110,108,109,110,95,108,109,110,108,109,110,108,109,110,108,109,110,108,109,110,108,109,110,108,95,108,109,110,108,109,110,108,109,108,109,110,108,109,110,108,109,110,108,109,110,108,109,110,108,109,110,108,109,110,109,110,110,109,109,109,109,109,110,0,0,0,0,0,112,113,114,115,112,113,114,115,112,113,114,115,112,113,114,115,112,113,114,115,112,113,114,115,112,113,114,115,111,112,113,114,115,112,113,114,115,112,113,114,115,112,113,114,115,112,113,114,115,112,113,114,115,112,113,114,115,111,112,113,114,115,112,113,114,115,112,113,114,115,112,113,114,115,112,113,114,115,112,113,114,115,112,113,114,115,112,113,114,115,112,113,114,115,0,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,0,0,118,119,118,119,118,119,118,119,119,118,119,118,119,118,119,118,119,118,119,118,119,118,119,118,119,118,119,118,118,119,118,119,118,119,118,119,118,119,118,119,118,119,118,119,118,0,0,121,122,121,122,121,122,121,122,122,121,122,122,122,121,122,121,122,121,121,122,121,122,121,121,122,121,122,121,122,121,122,121,122,121,122,121,122,121,122,121,122,121,122,121,121,121,121,0,0,0,0,0,127,128,129,130,131,127,128,129,130,131,127,128,129,130,131,127,128,129,130,131,127,128,129,130,131,127,128,129,130,131,127,128,129,130,131,127,128,129,130,131,127,128,129,130,131,127,128,129,130,131,127,128,129,130,131,127,128,129,130,131,127,128,129,130,131,127,128,129,130,131,127,128,129,130,131,127,128,129,130,131,127,128,129,130,131,127,128,129,130,131,127,128,129,130,131,127,128,129,130,131,127,128,129,130,131,127,128,129,130,131,130,131,131,129,131,127,129,130,127,128,129,130,131,0,136,136,16,16,16,0,0,136,16,136,137,136,137,136,137,136,137,136,136,137,136,136,136,137,136,137,137,136,137,136,137,137,137,137,137,136,137,137,136,137,136,137,136,137,136,137,136,137,136,137,136,137,137,137,137,137,137,137,0,0,0,0,0,139,140,141,142,139,140,141,142,139,140,141,142,139,140,141,142,139,140,141,139,140,141,142,139,140,139,140,139,140,141,142,139,140,141,142,141,142,139,140,141,142,139,140,141,142,139,140,141,142,139,140,141,142,139,140,141,142,139,140,0,139,140,141,142,135,139,140,141,139,140,141,142,139,140,141,142,139,140,141,142,139,140,141,142,139,140,141,142,139,140,141,142,139,140,141,142,139,140,141,142,141,142,141,142,142],"f":"````````{{{h{{f{}{{b{c}}{d{e}}}}}}}{{n{{j{{j{e}}}}l}}}{}A`}0{{{h{{Ab{c}}}}}{{n{{j{j}}l}}}f}````````````````````````````````````````````````````````````{{{Ad{cge}}iAf}{{Ad{cge}}}{}Ah{{Aj{ce}}}{{Al{e}}}}{{{h{An{Ab{c}}}}h}{{n{l}}}B`}{{{h{{Bd{}{{b{c}}{Bb{e}}}}}}{h{c}}}{{n{el}}}{}{}}{{{h{An{Ab{c}}}}h}{{n{l}}}Bd}{{{h{l}}}{{h{Bf}}}}0{{{h{Bh}}}Bj}{{{h{{f{}{{b{c}}{d{e}}}}}}}{{n{{j{e}}l}}}{}A`}0{{{h{{Ab{c}}}}}{{n{jl}}}f}{{{h{l}}}{{h{Bl}}}}``````{{{h{c}}}{{h{e}}}{}{}}00000000000{{{h{Anc}}}{{h{Ane}}}{}{}}00000000000{{{h{{Bd{}{{b{c}}{Bb{e}}}}}}{h{{Bn{g}}}}}{{n{{j{e}}l}}}{}{}{{C`{c}}Cb}}0{{{h{An{Ab{c}}}}{h{{Bn{e}}}}}{{n{jl}}}{CbBd}{C`Cb}}{{{h{{Cd{}{{b{c}}{Bb{e}}}}}}{h{{Bn{g}}}}}{{n{{j{e}}l}}}{}{}{{C`{c}}Cb}}0{{{h{An{Ab{c}}}}{h{{Bn{e}}}}}{{n{jl}}}{CbCd}{C`Cb}}{{{h{{Ch{}{{b{c}}{Cf{e}}}}}}{h{{Bn{g}}}}}{{n{{j{e}}l}}}{}{}{{C`{c}}Cb}}0{{{h{An{Ab{c}}}}{h{{Bn{e}}}}}{{n{jl}}}{CbCh}{C`Cb}}{{{h{{Cl{}{{b{c}}{Cj{e}}}}}}{h{{Bn{g}}}}}{{n{{j{e}}l}}}{}{}{{C`{c}}Cb}}0{{{h{An{Ab{c}}}}{h{{Bn{e}}}}}{{n{jl}}}{CbCl}{C`Cb}}{{{h{{D`{}{{b{c}}{Cn{e}}}}}}{h{{Bn{g}}}}}{{n{{j{e}}l}}}{}{}{{C`{c}}Cb}}0{{{h{An{Ab{c}}}}{h{{Bn{e}}}}}{{n{jl}}}{CbD`}{C`Cb}}{{{h{An{Ab{c}}}}{h{Db}}Ddg}{{n{el}}}{}{}{{Df{{h{c}}}{{Bb{{n{el}}}}}}}}??>{{{h{l}}}Dh}`{{{Ad{cge}}i}{{Ad{cge}}}{}Ah{{Aj{ce}}}{{Dj{ge}}}}{{{h{Bh}}}Bh}{{{h{Dl}}}Dl}{{{h{{Ab{c}}}}}{{Ab{c}}}Dn}{{{h{{E`{ceg}}}}}{{E`{ceg}}}DnDnDn}{{{h{{Eb{cegikm}}}}}{{Eb{cegikm}}}DnDnDnDnDnDn}{{{h{{Ed{ce}}}}}{{Ed{ce}}}DnDn}{{{h{{Ef{ce}}}}}{{Ef{ce}}}DnDn}{{{h{Eh}}}Eh}{{{h{Ej}}}Ej}{{{h{c}}{h{Ane}}}El{}{}}00000000{{{h{{E`{ceg}}}}{h{{E`{ceg}}}}}En{}{}Ah}{{{Ad{cge}}i}{{Ad{cge}}}{}Ah{{Aj{ce}}}{{Df{e}{{Bb{e}}}}}}{{{h{An{Ab{c}}}}{Ab{e}}}El{}{}}{{{h{An{Ab{c}}}}{Ab{c}}}El{}}{{lc}l{F`FbFd}}{{{h{{Cd{}{{b{c}}{Bb{e}}}}}}{h{c}}}{{n{el}}}{}{}}{{{h{An{Ab{c}}}}h}{{n{l}}}Cd}{{{Eb{cegikm}}m}{{Eb{cegikm}}}{}{}{}{}{}A`}{{{Ed{ce}}e}{{Ed{ce}}}{}{}}{{{Ef{ce}}e}{{Ef{ce}}}{}A`}```{{{Eb{cegikm}}Ff}{{Eb{cegikm}}}{}{}{}{}{}A`}{{{Ed{ce}}Ff}{{Ed{ce}}}{}{}}{{{Ef{ce}}Ff}{{Ef{ce}}}{}A`}```````{{{Ad{cge}}Ff}{{Ad{cge}}}{}Ah{{Aj{ce}}}}{{}Dl}{{}{{Ab{c}}}Fh}{{}{{Eb{cegikm}}}FhFhFhFhFhFh}{{}{{Ef{ce}}}FhFh}{{}Eh}{{}Ej}{{{h{l}}}h}{{{h{Anl}}}{{h{An}}}}{c{{n{Bh}}}Fj}{c{{n{Dl}}}Fj}{c{{n{{Eb{egikmo}}}}}FjFlFlFlFlFlFl}{c{{n{{Ed{eg}}}}}FjFlFl}{c{{n{{Ef{eg}}}}}FjFlFl}{c{{n{Eh}}}Fj}{c{{n{Ej}}}Fj}{l{{n{cl}}}{F`FnFbFd}}{{{h{Anl}}}{{G`{{h{Anc}}}}}{F`FnFbFd}}{{{h{l}}}{{G`{{h{c}}}}}{F`FnFbFd}}{{{h{Anl}}}El}{{{h{Bh}}{h{Bh}}}Ff}{{{h{Dl}}{h{Dl}}}Ff}{{{h{{E`{ceg}}}}{h{{E`{ceg}}}}}Ff{}{}Ah}{{{h{{Eb{cegikm}}}}{h{{Eb{cegikm}}}}}FfGbGbGbGbGbGb}{{{h{{Ef{ce}}}}{h{{Ef{ce}}}}}FfGbGb}{{{h{Eh}}{h{Eh}}}Ff}{{{h{Ej}}{h{Ej}}}Ff}{{{h{AnDl}}c}El{{Gh{}{{Gd{{Gf{{h{Db}}Bh}}}}}}}}{{{h{l}}{h{AnGj}}}{{n{ElGl}}}}0{{{h{Gn}}{h{AnGj}}}H`}0{{{h{Bh}}{h{AnGj}}}H`}0{{{h{Dl}}{h{AnGj}}}H`}0{{{h{{Ab{c}}}}{h{AnGj}}}H`Fn}{{{h{{E`{cge}}}}{h{AnGj}}}H`{}Ah{{Aj{ce}}}}{{{h{{Eb{cegikm}}}}{h{AnGj}}}H`FnFnFnFnFnFn}{{{h{{Ed{ce}}}}{h{AnGj}}}H`FnFn}{{{h{{Ef{ce}}}}{h{AnGj}}}H`FnFn}{{{h{Eh}}{h{AnGj}}}H`}0{{{h{Ej}}{h{AnGj}}}H`}0{cc{}}{cl{BfFbFd}}{Hbc{}}22{HdBh}{HfBh}{HhBh}{HjBh}{HlBh}{{{h{Db}}}Bh}8{BjBh}{FfBh}{HnBh};;;;;;;;{cDl{{Gh{}{{Gd{{Gf{{h{Db}}Bh}}}}}}}}{{{h{c}}}e{}{}}00000000000{{{h{An{Ah{}{{b{c}}{d{e}}}}}}{h{{Ab{g}}}}}El{}A`{}}{{{h{An{Eb{cegikm}}}}{h{{Ab{o}}}}}ElDn{}{}{}{}A`{}}{{{h{An{Ed{ce}}}}{h{{Ab{g}}}}}ElDnA`{}}{{{h{An{Ef{ce}}}}{h{{Ab{g}}}}}ElDnA`{}}{{{h{Dl}}c}{{G`{{h{Bh}}}}}{{I`{Db}}}}{{{h{{Ah{}{{b{c}}{d{e}}}}}}}e{}A`}{{{h{{Eb{cegikm}}}}}m{}{}{}{}{}A`}{{{h{{Eb{cegikm}}}}}oDn{}{}{}{}A`{}}{{{h{{Ed{ce}}}}}gDnA`{}}{{{h{{Ef{ce}}}}}gDnA`{}}{{{h{{Ef{ce}}}}}e{}A`}{{{h{{Ah{}{{b{c}}{d{e}}}}}}}{{G`{{h{c}}}}}{}A`}{{{h{{Eb{cegikm}}}}}{{G`{{h{c}}}}}Dn{}{}{}{}A`}{{{h{{Ed{ce}}}}}{{G`{{h{c}}}}}DnA`}{{{h{{Ef{ce}}}}}{{G`{{h{c}}}}}DnA`}{{{h{Bh}}}{{G`{Ff}}}}:89756{{{h{Bh}}}{{G`{Hl}}}}{{{h{{Ah{}{{b{c}}{d{e}}}}}}}{{h{{Ib{BjHd}}}}}{}A`}{{{h{{Eb{cegikm}}}}}{{h{{Ib{BjHd}}}}}Dn{}{}{}{}A`}{{{h{{Ed{ce}}}}}{{h{{Ib{BjHd}}}}}DnA`}{{{h{{Ef{ce}}}}}{{h{{Ib{BjHd}}}}}DnA`}{{{h{{Eb{cegikm}}}}}{{G`{{h{e}}}}}{}{}{}{}{}A`}{{{h{{Eb{cegikm}}}}}{{G`{{h{i}}}}}{}{}{}{}{}A`}{{{h{Bh}}}{{G`{Hn}}}}1{{{h{{Ah{}{{b{c}}{d{e}}}}}}}Hd{}A`}{{{h{{Eb{cegikm}}}}}HdDn{}{}{}{}A`}{{{h{{Ed{ce}}}}}HdDnA`}{{{h{{Ef{ce}}}}}HdDnA`}{{{h{{Eb{cegikm}}}}}{{G`{{h{g}}}}}{}{}{}{}{}A`}43214321{{{h{{Ah{}{{b{c}}{d{e}}}}}}}{{G`{{h{c}}}}}{}A`}{{{h{{Eb{cegikm}}}}}{{G`{{h{c}}}}}Dn{}{}{}{}A`}{{{h{{Ed{ce}}}}}{{G`{{h{c}}}}}DnA`}{{{h{{Ef{ce}}}}}{{G`{{h{c}}}}}DnA`}{{{h{{Ef{ce}}}}}{{G`{{h{{j{c}}}}}}}{}A`}{{{h{{Eb{cegikm}}}}}m{}{}{}{}{}A`}{{{h{{Ef{ce}}}}}e{}A`}{{{h{{Ef{ce}}}}}{{G`{{h{c}}}}}{}A`}{{{h{{Eb{cegikm}}}}}{{G`{{h{c}}}}}{}{}{}{}{}A`}32{{{h{{Eb{cegikm}}}}}{{G`{{h{e}}}}}{}{}{}{}{}A`}{{{h{{Eb{cegikm}}}}}{{G`{{h{i}}}}}{}{}{}{}{}A`}30;2{{{h{{Eb{cegikm}}}}}{{G`{{h{k}}}}}{}{}{}{}{}A`}{{{Ab{c}}}{{G`{c}}}{}}1{{{h{Bh}}}{{G`{Bj}}}}{{{h{{Ah{}{{b{c}}{d{e}}}}}}}e{}A`}{{{h{{Eb{cegikm}}}}}oDn{}{}{}{}A`{}}:{{{h{{Ed{ce}}}}}gDnA`{}}{{{h{{Ef{ce}}}}}gDnA`{}};{{{h{{Ah{}{{b{c}}{d{e}}}}}}}{{G`{{h{Ej}}}}}{}A`}{{{h{{Eb{cegikm}}}}}{{G`{{h{Ej}}}}}Dn{}{}{}{}A`}{{{h{{Ed{ce}}}}}{{G`{{h{Ej}}}}}DnA`}{{{h{{Ef{ce}}}}}{{G`{{h{Ej}}}}}DnA`}{{{h{{Ah{}{{b{c}}{d{e}}}}}}}{{h{Eh}}}{}A`}{{{h{{Eb{cegikm}}}}}{{h{Eh}}}Dn{}{}{}{}A`}{{{h{{Ed{ce}}}}}{{h{Eh}}}DnA`}{{{h{{Ef{ce}}}}}{{h{Eh}}}DnA`}{{{h{{Ah{}{{b{c}}{d{e}}}}}}}{{G`{Id}}}{}A`}{{{h{{Eb{cegikm}}}}}{{G`{Id}}}Dn{}{}{}{}A`}{{{h{{Ed{ce}}}}}{{G`{Id}}}DnA`}{{{h{{Ef{ce}}}}}{{G`{Id}}}DnA`}{{{h{Bh}}}{{G`{Hd}}}}`{{{h{{Ch{}{{b{c}}{Cf{e}}}}}}{h{c}}}{{n{el}}}{}{}}{{{h{An{Ab{c}}}}h}{{n{l}}}Ch}{{{Eb{cegikm}}e}{{Eb{cegikm}}}{}{}{}{}{}A`}{{{h{Eh}}{h{Anc}}}ElIf}{{{h{Ej}}{h{Anc}}}ElIf}{{{h{{Cl{}{{b{c}}{Cj{e}}}}}}{h{c}}}{{n{el}}}{}{}}{{{h{An{Ab{c}}}}h}{{n{l}}}Cl}{{{Eb{cegikm}}i}{{Eb{cegikm}}}{}{}{}{}{}A`}`{{{h{An{Ah{}{{b{c}}{d{e}}}}}}}El{}A`}{{{h{An{Eb{cegikm}}}}}ElDn{}{}{}{}A`}{{{h{An{Ed{ce}}}}}ElDnA`}{{{h{An{Ef{ce}}}}}ElDnA`}{{{Ef{ce}}c}{{Ef{ce}}}{}A`}`{{{h{AnAj}}{h{An{Ab{c}}}}e}{{n{{Gf{e{G`{Dl}}}}l}}}{}Ah}0{{{h{AnDl}}cBh}{{h{AnDl}}}{{I`{Db}}}}{ce{}{}}000000000008`{{{h{l}}}Ff}{{{h{{Ah{}{{b{c}}{d{e}}}}}}}Ff{}A`}{{{h{{Eb{cegikm}}}}}FfDn{}{}{}{}A`}{{{h{{Ed{ce}}}}}FfDnA`}{{{h{{Ef{ce}}}}}FfDnA`}{{{h{c}}}Ff{}}00000000000```{{{h{{D`{}{{b{c}}{Cn{e}}}}}}{h{c}}}{{n{el}}}{}{}}{{{h{An{Ab{c}}}}h}{{n{l}}}D`}{{{Eb{cegikm}}g}{{Eb{cegikm}}}{}{}{}{}{}A`}`{{{h{Dl}}}{{j{{Gf{Bj{h{Db}}}}}}}}{{{h{Bh}}}{{h{Db}}}}`````{{{Eb{cegikm}}Hd}{{Eb{cegikm}}}{}{}{}{}{}A`}{{{Ed{ce}}Hd}{{Ed{ce}}}{}{}}{{{Ef{ce}}Hd}{{Ef{ce}}}{}A`}```{{DlDl}Dl}{cl{F`FnFbFd}}{{{h{Aj}}}{{h{Db}}}}{{}{{Ah{}{{b{c}}{d{e}}}}}{}A`}{{cg}{{Ad{cge}}}{}Ah{{Aj{ce}}}}{cl{BfFbFd}}{{}Dl}{c{{Ab{c}}}{}}{{{Ab{c}}eg}{{E`{ceg}}}{}{}{}}{{}{{Eb{cegikm}}}Dn{}{}{}{}A`}{{}{{Ed{ce}}}DnA`}{{}{{Ef{ce}}}DnA`}{{{h{AnAj}}{h{An{Ab{c}}}}e}{{n{{Gf{e{G`{Dl}}}}l}}}{}Ah}`{{{h{{Bd{}{{b{c}}{Bb{e}}}}}}}Ff{}{}}0{{{h{{Cd{}{{b{c}}{Bb{e}}}}}}}Ff{}{}}0{{{h{{Ch{}{{b{c}}{Cf{e}}}}}}}Ff{}{}}0{{{h{{Cl{}{{b{c}}{Cj{e}}}}}}}Ff{}{}}0{{{h{{D`{}{{b{c}}{Cn{e}}}}}}}Ff{}{}}0{{{Eb{cegikm}}c}{{Eb{cegikm}}}{}{}{}{}{}A`}{{{Ed{ce}}c}{{Ed{ce}}}{}{}}``{{{h{{E`{ceg}}}}{h{{E`{ceg}}}}}{{G`{En}}}{}{}Ah}{{{Ef{ce}}{j{c}}}{{Ef{ce}}}{}A`}``````````````````{{{h{An{Ab{c}}}}{h{Db}}g}{{n{el}}}{}{}{{Df{{h{c}}}{{Bb{{n{el}}}}}}}}{{{h{{E`{ceg}}}}}{{h{{Ab{c}}}}}{}{}{}}``{{{h{An{Ab{c}}}}}El{}}{{{Eb{cegikm}}k}{{Eb{cegikm}}}{}{}{}{}{}A`}`{{{h{l}}}{{h{Bf}}}}{{{Ad{cge}}}{{n{{E`{cge}}l}}}{}Ah{{Aj{ce}}}}{{{h{Bh}}c}nIh}{{{h{Dl}}c}nIh}{{{h{{Eb{cegikm}}}}o}nIjIjIjIjIjIjIh}{{{h{{Ed{ce}}}}g}nIjIjIh}{{{h{{Ef{ce}}}}g}nIjIjIh}{{{h{Eh}}c}nIh}{{{h{Ej}}c}nIh}{{{h{{E`{ceg}}}}}{{h{e}}}{}{}{}}`{{{h{{E`{ceg}}}}}{{h{g}}}{}{}{}}`{{{h{An{Ef{ce}}}}}{{G`{c}}}{}A`}{{{h{An{Eb{cegikm}}}}}{{G`{c}}}{}{}{}{}{}A`}{{{h{An{Eb{cegikm}}}}}{{G`{e}}}{}{}{}{}{}A`}{{{h{An{Eb{cegikm}}}}}{{G`{i}}}{}{}{}{}{}A`}30{{{h{An{Eb{cegikm}}}}}{{G`{g}}}{}{}{}{}{}A`}3{{{h{An{Ef{ce}}}}}{{G`{{j{c}}}}}{}A`}54325214{{{h{An{Eb{cegikm}}}}}{{G`{k}}}{}{}{}{}{}A`}{{{h{An{Ab{c}}}}}{{G`{c}}}{}}1{{{Eb{cegikm}}m}{{Eb{cegikm}}}{}{}{}{}{}A`}{{{Ed{ce}}e}{{Ed{ce}}}{}{}}{{{Ef{ce}}e}{{Ef{ce}}}{}A`}```{{{h{AnAj}}{h{c}}}EhAh}000{{{Ah{}{{b{c}}{d{e}}}}Ej}{{Ah{}{{b{c}}{d{e}}}}}{}A`}{{{Eb{cegikm}}Ej}{{Eb{cegikm}}}Dn{}{}{}{}A`}{{{Ed{ce}}Ej}{{Ed{ce}}}DnA`}{{{Ef{ce}}Ej}{{Ef{ce}}}DnA`}{{{h{{Ah{}{{b{c}}{d{e}}}}}}}Ff{}A`}0{{{h{Eh}}}Ff}````{{{h{Ej}}}{{h{Db}}}}{{{h{An{Ah{}{{b{c}}{d{e}}}}}}{G`{Id}}}{{h{An{Ah{}{{b{c}}{d{e}}}}}}}{}A`}{{{h{An{Eb{cegikm}}}}{G`{Id}}}{{h{An{Eb{cegikm}}}}}Dn{}{}{}{}A`}{{{h{An{Ed{ce}}}}{G`{Id}}}{{h{An{Ed{ce}}}}}DnA`}{{{h{An{Ef{ce}}}}{G`{Id}}}{{h{An{Ef{ce}}}}}DnA`}```{{{Ad{cge}}Id}{{Ad{cge}}}{}Ah{{Aj{ce}}}}{{{Ad{cge}}Ff}{{Ad{cge}}}{}Ah{{Aj{ce}}}}{{{h{c}}}e{}{}}00000000{{{h{c}}}Bj{}}000000{{{h{c}}}{{G`{e}}}{}{}}00000000000222222222222{c{{n{e}}}{}{}}00000000000000000000000{{{h{c}}}Il{}}00000000000{{{h{An{Ah{}{{b{c}}{d{e}}}}}}}El{}A`}{{{h{An{Eb{cegikm}}}}}ElDn{}{}{}{}A`}{{{h{An{Ed{ce}}}}}ElDnA`}{{{h{An{Ef{ce}}}}}ElDnA`}{ce{}{}}00000000000````````````{{{h{c}}}{{h{e}}}{}{}}{{{h{Anc}}}{{h{Ane}}}{}{}}{{{h{In}}}In}{{{h{c}}{h{Ane}}}El{}{}}{{}In}{{{h{In}}{h{In}}}Ff}{{{h{In}}{h{AnGj}}}H`}0{{{h{Dj}}}In}{cc{}}{{{h{c}}}e{}{}}{{{h{In}}{h{Anc}}}ElIf};{{{h{c}}}Ff{}}{{{h{Dj}}}{{n{{G`{{Gf{ce}}}}l}}}{}{}}{{{h{Dj}}{h{c}}{h{e}}}{{n{Ell}}}{}{}}{{{h{Dj}}{h{c}}{h{e}}Hd}{{n{Ell}}}{}{}}5{{{h{c}}}Bj{}}{{{h{c}}}{{G`{e}}}{}{}}7{c{{n{e}}}{}{}}0{{{h{c}}}Il{}}{ce{}{}}```````{{{h{c}}}{{h{e}}}{}{}}0{{{h{Anc}}}{{h{Ane}}}{}{}}0{{{h{{J`{c}}}}}{{J`{c}}}Dn}{{{h{Af}}}Af}{{{h{c}}{h{Ane}}}El{}{}}0{{}{{J`{c}}}Fh}{{}Af}{c{{n{Af}}}Fj}{{{h{Af}}{h{Af}}}Ff}{{{h{Af}}{h{AnGj}}}H`}{cc{}}0{{{h{c}}}e{}{}}0<<{{{h{{J`{c}}}}}Ff{}}{{{h{c}}}Ff{}}0{{}{{J`{c}}}{}}{{{h{AnAl}}{h{c}}}{{n{Ell}}}{}}{{{h{An{J`{c}}}}{h{c}}}{{n{Ell}}}Ah}{{{h{AnAl}}{h{Db}}{h{c}}{h{Dl}}}{{n{Ell}}}{}}{{{h{An{J`{c}}}}{h{Db}}{h{c}}{h{Dl}}}{{n{Ell}}}Ah}{{{h{AnAl}}{h{c}}{h{Dl}}}{{n{Ell}}}{}}{{{h{An{J`{c}}}}{h{c}}{h{Dl}}}{{n{Ell}}}Ah}{{{h{An{J`{c}}}}eAf}{{h{An{J`{c}}}}}{}{{Al{c}}}}{{{h{Af}}c}nIh};;{{{h{c}}}{{G`{e}}}{}{}}0<<{c{{n{e}}}{}{}}000{{{h{c}}}Il{}}0{ce{}{}}0```{{{h{Jb}}{h{c}}e}{{n{gl}}}{}{}{}}{{{h{Jb}}{h{c}}}{{n{el}}}{}{}}{{{h{c}}}{{h{e}}}{}{}}00{{{h{Anc}}}{{h{Ane}}}{}{}}00{{{h{Jb}}}Jb}{{{h{Jd}}}Jd}{{{h{Jf}}}Jf}{{{h{c}}{h{Ane}}}El{}{}}006{{{h{Jd}}{h{c}}}{{n{el}}}{}{}}{{}Jb}{{}Jd}{{}Jf}{c{{n{Jb}}}Fj}{c{{n{Jd}}}Fj}{c{{n{Jf}}}Fj}{{{h{Jb}}{h{Jb}}}Ff}{{{h{Jd}}{h{Jd}}}Ff}{{{h{Jf}}{h{Jf}}}Ff}{{{h{Jb}}{h{AnGj}}}H`}{{{h{Jd}}{h{AnGj}}}H`}{{{h{Jf}}{h{AnGj}}}H`}{cc{}}00{{{h{c}}}e{}{}}00{{{h{Jb}}{h{c}}}{{n{cl}}}{}}?{{{h{Jb}}{h{Anc}}}ElIf}{{{h{Jd}}{h{Anc}}}ElIf}{{{h{Jb}}{h{c}}}{{n{el}}}{}{}}{ce{}{}}00{{{h{c}}}Ff{}}002{{{h{Jf}}}{{h{Db}}}}{{}Jb}{{}Jd}{{}Jf}{{{h{AnJf}}{h{An{Ab{c}}}}{Eb{{j{Hl}}ElElElElHl}}}{{n{{Gf{{Eb{{j{Hl}}ElElElElHl}}{G`{Dl}}}}l}}}{}}{{{h{Jb}}c}nIh}{{{h{Jd}}c}nIh}{{{h{Jf}}c}nIh}>>>{{{h{c}}}{{G`{e}}}{}{}}00???{c{{n{e}}}{}{}}00000{{{h{c}}}Il{}}00<<<```````````````{{{h{c}}}{{h{e}}}{}{}}0{{{h{Anc}}}{{h{Ane}}}{}{}}0{{{h{{Jh{c}}}}}{{Jh{c}}}Dn}{{{h{{Jj{c}}}}}{{Jj{c}}}Dn}{{{h{c}}{h{Ane}}}El{}{}}0{c{{n{{Jh{e}}}}}FjFl}{c{{n{{Jj{e}}}}}FjFl}{cc{}}0{{{h{c}}}e{}{}}0{{{h{An{Jh{c}}}}{h{An{Ab{e}}}}{Eb{cElElElElc}}}{{n{{Gf{{Eb{cElElElElc}}{G`{Dl}}}}l}}}A`{{Cd{}{{b{c}}{Bb{c}}}}}}{{{h{An{Jj{c}}}}{h{An{Ab{e}}}}{Eb{cElElElElc}}}{{n{{Gf{{Eb{cElElElElc}}{G`{Dl}}}}l}}}A`{{Cd{}{{b{c}}{Bb{c}}}}}}{ce{}{}}0{{{h{c}}}Ff{}}0{{{h{{Jh{c}}}}}{{h{Db}}}A`}{{{h{{Jj{c}}}}}{{h{Db}}}A`}{{cc}{{Jh{c}}}A`}{{ccc}{{Jj{c}}}A`}76{{{h{{Jh{c}}}}e}nIjIh}{{{h{{Jj{c}}}}e}nIjIh}{{{Jh{c}}cc}{{Jh{c}}}A`};;{{{h{c}}}{{G`{e}}}{}{}}0<<{c{{n{e}}}{}{}}000{{{h{c}}}Il{}}0;;```{{{h{c}}}{{h{e}}}{}{}}0{{{h{Anc}}}{{h{Ane}}}{}{}}0{{{h{{Jl{ce}}}}}{{Jl{ce}}}DnDn}{{{h{{Jn{cegi}}}}}{{Jn{cegi}}}DnDnDnDn}{{{h{c}}{h{Ane}}}El{}{}}0{c{{n{{Jl{eg}}}}}FjFlFl}{c{{n{{Jn{egik}}}}}FjFlFlFlFl}{cc{}}0{{{h{c}}}e{}{}}0{{{h{{Jl{ce}}}}}{{n{{h{c}}l}}}{}A`}{{{h{An{Jl{ce}}}}{h{An{Ab{i}}}}{Eb{cElElElge}}}{{n{{Gf{{Eb{cElElElge}}{G`{Dl}}}}l}}}{DnK`KbKdKf}{A`Kh}{KjKjKfK`Kd}{{Bd{}{{b{c}}{Bb{c}}}}}}{{{h{An{Jn{ckme}}}}{h{An{Ab{i}}}}{Eb{cgElElEle}}}{{n{{Gf{{Eb{cgElElEle}}{G`{Dl}}}}l}}}{DnKlKj}A`{}{{Cd{}{{b{c}}{Bb{e}}}}{Ch{}{{b{c}}{Cf{g}}}}}{Dn{Kn{ce}}{Aj{i{Eb{cgElElEle}}}}}{{L`{gce}}}}{ce{}{}}0{{{h{c}}}Ff{}}0{{{h{{Jl{ce}}}}}{{h{Db}}}{DnK`KbKdKf}{A`Kh}{KjKjKfK`Kd}}{{{h{{Jn{ckme}}}}}{{h{Db}}}{DnKlKj}A`{}{{Cd{}{{b{c}}{Bb{e}}}}{Ch{}{{b{c}}{Cf{g}}}}}{Dn{Kn{ce}}{Aj{i{Eb{cgElElEle}}}}}{{L`{gce}}}}{c{{Jl{ce}}}{}A`}{{ce}{{Jn{gcei}}}{}{}{}A`}76{{{Jn{cegi}}Hd}{{Jn{cegi}}}{}{}{}A`}{{{Jn{cegi}}i}{{Jn{cegi}}}{}{}{}A`}{{{h{{Jl{ce}}}}g}nIjIjIh}{{{h{{Jn{cegi}}}}k}nIjIjIjIjIh}=={{{h{c}}}{{G`{e}}}{}{}}0>>{c{{n{e}}}{}{}}000{{{h{c}}}Il{}}0<<`````{{{h{c}}}{{h{e}}}{}{}}000{{{h{Anc}}}{{h{Ane}}}{}{}}000{{{h{Lb}}}Lb}{{{h{Ld}}}Ld}{{{h{Lf}}}Lf}{{{h{Lh}}}Lh}{{{h{c}}{h{Ane}}}El{}{}}000{{}Lb}{{}Ld}{{}Lf}{{}Lh}{c{{n{Lb}}}Fj}{c{{n{Ld}}}Fj}{c{{n{Lf}}}Fj}{c{{n{Lh}}}Fj}{{{h{Lb}}{h{AnGj}}}H`}{{{h{Ld}}{h{AnGj}}}H`}{{{h{Lf}}{h{AnGj}}}H`}{{{h{Lh}}{h{AnGj}}}H`}{cc{}}000{{{h{c}}}e{}{}}000{ce{}{}}000{{{h{c}}}Ff{}}000?>=<{{{h{Lb}}c}nIh}{{{h{Ld}}c}nIh}{{{h{Lf}}c}nIh}{{{h{Lh}}c}nIh}6666{{{h{c}}}{{G`{e}}}{}{}}0007777{c{{n{e}}}{}{}}0000000{{{h{c}}}Il{}}000{{{h{L`}}{h{c}}{h{c}}{h{e}}}g{}{}{}}{{{h{Lb}}{h{c}}{h{c}}{h{g}}}e{}{}{}}{{{h{Ld}}{h{c}}{h{c}}{h{g}}}e{}{}{}}{{{h{Lf}}{h{c}}{h{c}}{h{g}}}e{}{}{}}{{{h{Lh}}{h{c}}{h{c}}{h{g}}}e{}{}{}}====``{{{h{c}}}{{h{e}}}{}{}}0{{{h{Anc}}}{{h{Ane}}}{}{}}0{{{h{{Lj{ce}}}}}{{Lj{ce}}}DnDn}{{{h{{Ll{c}}}}}{{Ll{c}}}Dn}{{{h{c}}{h{Ane}}}El{}{}}0{{}{{Ll{c}}}A`}{c{{n{{Lj{eg}}}}}FjFlFl}{c{{n{{Ll{e}}}}}FjFl}{cc{}}0{{{h{c}}}e{}{}}0{{{h{An{Ll{c}}}}{h{An{Ab{k}}}}{Eb{eEliElgc}}}{{n{{Gf{{Eb{eEliElgc}}{G`{Dl}}}}l}}}A`{}{{Kh{c}}}{}{{Bd{}{{b{e}}{Bb{g}}}}{D`{}{{b{e}}{Cn{i}}}}}}{ce{}{}}0{{{h{c}}}Ff{}}0{{{h{{Lj{Aac}}}}}{{h{Db}}}A`{DnKj}Kh{DnLnM`K`K`K`}{{Bd{}{{b{e}}{Bb{g}}}}{D`{}{{b{e}}{Cn{i}}}}}DnDn{Dn{Kn{ec}}{Aj{{`{kc}}{Eb{emElEloc}}}}}}{{{h{{Ll{c}}}}}{{h{Db}}}A`}{c{{Lj{ce}}}{}A`}:{{{h{An{Lj{Aac}}}}{h{An{Ab{k}}}}{Eb{emiEloc}}}{{n{{Gf{{Eb{emiEloc}}{G`{Dl}}}}l}}}A`{DnKj}Kh{DnLnM`K`K`K`}{{Bd{}{{b{e}}{Bb{g}}}}{D`{}{{b{e}}{Cn{i}}}}}DnDn{Dn{Kn{ec}}{Aj{{`{kc}}{Eb{emElEloc}}}}}}6{{{h{{Lj{ce}}}}g}nIjIjIh}{{{h{{Ll{c}}}}e}nIjIh}{{{h{An{Lj{Aac}}}}{h{{Eb{emiEloc}}}}}EhA`{DnKj}Kh{DnLnM`K`K`K`}{{Bd{}{{b{e}}{Bb{g}}}}{D`{}{{b{e}}{Cn{i}}}}}DnDn{Dn{Kn{ec}}{Aj{{`{kc}}{Eb{emElEloc}}}}}}{{{h{An{Ll{c}}}}{h{{Eb{eElgElic}}}}}EhA`{DnKbKj}{DnLnM`K`K`K`}Kh};;{{{h{c}}}{{G`{e}}}{}{}}0<<{c{{n{e}}}{}{}}000{{{h{c}}}Il{}}0<<{{{Ll{c}}c}{{n{{Ll{c}}l}}}A`}{{{Lj{ce}}e}{{n{{Lj{ce}}l}}}{}A`}1`{{{h{c}}}{{h{e}}}{}{}}{{{h{Anc}}}{{h{Ane}}}{}{}}{{{h{{Mb{c}}}}}{{Mb{c}}}Dn}{{{h{c}}{h{Ane}}}El{}{}}{c{{n{{Mb{e}}}}}FjFl}{cc{}}{{{h{c}}}e{}{}}{{{h{An{Mb{c}}}}{h{An{Ab{e}}}}{Eb{cElElElElc}}}{{n{{Gf{{Eb{cElElElElc}}{G`{Dl}}}}l}}}A`{{Cd{}{{b{c}}{Bb{c}}}}}}{ce{}{}}{{{h{c}}}Ff{}}{{{h{{Mb{c}}}}}{{h{Db}}}A`}{{cc}{{n{{Mb{c}}l}}}A`}4{{{h{{Mb{c}}}}e}nIjIh}{{{h{An{Mb{c}}}}{h{{Eb{cElElElElc}}}}}EhA`}7{{{h{c}}}{{G`{e}}}{}{}}8{c{{n{e}}}{}{}}0{{{h{c}}}Il{}}8{{{Mb{c}}c}{{n{{Mb{c}}l}}}A`}`{{{h{c}}}{{h{e}}}{}{}}{{{h{Anc}}}{{h{Ane}}}{}{}}{{{h{{Md{c}}}}}{{Md{c}}}Dn}{{{h{c}}{h{Ane}}}El{}{}}{c{{n{{Md{e}}}}}FjFl}{cc{}}{{{h{c}}}e{}{}}{ce{}{}}{{{h{c}}}Ff{}}{{{h{{Md{k}}}}}{{h{Db}}}A`{DnKj}Dn{{Cd{}{{b{g}}{Bb{c}}}}{Ch{}{{b{g}}{Cf{e}}}}}{Dn{Kn{ec}}{Aj{i{Eb{geElElElc}}}}}}{c{{Md{c}}}{}}{{{h{An{Md{k}}}}{h{An{Ab{i}}}}{Eb{geElElElc}}}{{n{{Gf{{Eb{geElElElc}}{G`{Dl}}}}l}}}A`{DnKj}Dn{{Cd{}{{b{g}}{Bb{c}}}}{Ch{}{{b{g}}{Cf{e}}}}}{Dn{Kn{ec}}{Aj{i{Eb{geElElElc}}}}}}{{{h{{Md{c}}}}e}nIjIh}6{{{h{c}}}{{G`{e}}}{}{}}7{c{{n{e}}}{}{}}0{{{h{c}}}Il{}}8`?>{{{h{{Mf{c}}}}}{{Mf{c}}}Dn}={c{{n{{Mf{e}}}}}FjFl}<;:9{{{h{{Mf{c}}}}}{{h{Db}}}A`}{c{{Mf{c}}}{}}{{{h{An{Mf{c}}}}{h{An{Ab{i}}}}{Eb{geElElElc}}}{{n{{Gf{{Eb{geElElElc}}{G`{Dl}}}}l}}}A`{}{}{{Ch{}{{b{g}}{Cf{e}}}}}}{{{h{{Mf{c}}}}e}nIjIh}?8?776>````{{{h{c}}}{{h{e}}}{}{}}00{{{h{Anc}}}{{h{Ane}}}{}{}}00{{{h{{Mh{cegi}}}}}{{Mh{cegi}}}DnDnDnDn}{{{h{{Mj{ceg}}}}}{{Mj{ceg}}}DnDnDn}{{{h{{Ml{ceg}}}}}{{Ml{ceg}}}DnDnDn}{{{h{c}}{h{Ane}}}El{}{}}00`{{}{{Mj{gce}}}{}{}{}}{{}{{Ml{ceg}}}{}{}A`}{c{{n{{Mh{egik}}}}}FjFlFlFlFl}{c{{n{{Mj{egi}}}}}FjFlFlFl}{c{{n{{Ml{egi}}}}}FjFlFlFl}{{{h{{Mh{cegi}}}}{h{{Mh{cegi}}}}}FfGbGbGbGb}{{{h{{Mh{cegi}}}}{h{AnGj}}}H`FnFnFnFn}{cc{}}00{{{h{c}}}e{}{}}00{{{h{An{Mh{gcie}}}}{h{An{Ab{k}}}}{Eb{gcElElEle}}}{{n{{Gf{{Eb{gcElElEle}}{G`{Dl}}}}l}}}KdA`{DnKd}{{Mn{cce}}}{{Cd{}{{b{g}}{Bb{e}}}}{Ch{}{{b{g}}{Cf{c}}}}}}{{{h{An{Mj{gce}}}}{h{An{Ab{i}}}}{Eb{gcElElEle}}}{{n{{Gf{{Eb{gcElElEle}}{G`{Dl}}}}l}}}{DnK`}A`{DnK`Kd}{{Cd{}{{b{g}}{Bb{e}}}}{Ch{}{{b{g}}{Cf{c}}}}}}{{{h{An{Ml{gce}}}}{h{An{Ab{i}}}}{Eb{gcElElEle}}}{{n{{Gf{{Eb{gcElElEle}}{G`{Dl}}}}l}}}{DnK`}A`{DnK`Kd}{{Cd{}{{b{g}}{Bb{e}}}}{Ch{}{{b{g}}{Cf{c}}}}}}{{{h{AnKn}}c}{{n{Ell}}}{}}{{{h{An{Mh{cegi}}}}i}{{n{Ell}}}{}{}{}A`}{{{h{An{Mj{ceg}}}}g}{{n{Ell}}}{}{}{}}{{{h{An{Ml{ceg}}}}g}{{n{Ell}}}{}{}A`}{ce{}{}}00{{{h{c}}}Ff{}}00{{{h{{Mh{gcie}}}}}{{h{Db}}}KdA`{DnKd}{{Mn{cce}}}}{{{h{{Mj{gce}}}}}{{h{Db}}}{DnK`}A`{DnK`Kd}}{{{h{{Ml{gce}}}}}{{h{Db}}}{DnK`}A`{DnK`Kd}}{c{{Mh{egci}}}{}{}{}A`}{{}{{Mj{gce}}}{}{}{}}{{}{{Ml{ceg}}}{}{}A`}>=<{{{Mh{cegi}}i}{{n{{Mh{cegi}}l}}}{}{}{}A`}{{{h{AnKn}}c}El{}}{{{h{An{Mh{cegi}}}}e}El{}{}{}A`}{{{h{An{Mj{ceg}}}}e}El{}{}{}}{{{h{An{Ml{ceg}}}}e}El{}{}A`}{{{h{{Mh{cegi}}}}k}nIjIjIjIjIh}{{{h{{Mj{ceg}}}}i}nIjIjIjIh}{{{h{{Ml{ceg}}}}i}nIjIjIjIh}{{{h{An{Mh{gcie}}}}{h{{Eb{gcElElEle}}}}}EhKdA`{DnKd}{{Mn{cce}}}}{{{h{An{Mj{gce}}}}{h{{Eb{gcElElEle}}}}}Eh{DnK`}A`{DnK`Kd}}{{{h{c}}}e{}{}}00{{{h{c}}}{{G`{e}}}{}{}}00111{c{{n{e}}}{}{}}00000{{{h{c}}}Il{}}00{ce{}{}}00{{{Mj{gce}}ee}{{n{{Mj{gce}}l}}}{}{}{}}{{{Ml{ceg}}gg}{{n{{Ml{ceg}}l}}}{}{}A`}01{{{Mj{gce}}e}{{n{{Mj{gce}}l}}}{}{}{}}000{{{Ml{ceg}}g}{{n{{Ml{ceg}}l}}}{}{}A`}`````{{{h{c}}}{{h{e}}}{}{}}000{{{h{Anc}}}{{h{Ane}}}{}{}}000{{{h{{N`{c}}}}}{{N`{c}}}Dn}{{{h{{Nb{c}}}}}{{Nb{c}}}Dn}{{{h{{Nd{c}}}}}{{Nd{c}}}Dn}{{{h{{Nf{c}}}}}{{Nf{c}}}Dn}{{{h{c}}{h{Ane}}}El{}{}}000{{}{{N`{c}}}Fh}{{}{{Nb{c}}}Fh}{{}{{Nd{c}}}Fh}{{}{{Nf{c}}}Fh}{c{{n{{N`{e}}}}}FjFl}{c{{n{{Nb{e}}}}}FjFl}{c{{n{{Nd{e}}}}}FjFl}{c{{n{{Nf{e}}}}}FjFl}{{{h{{N`{c}}}}{h{{N`{c}}}}}FfGb}{{{h{{Nb{c}}}}{h{{Nb{c}}}}}FfGb}{{{h{{Nd{c}}}}{h{{Nd{c}}}}}FfGb}{{{h{{Nf{c}}}}{h{{Nf{c}}}}}FfGb}{{{h{Mn}}c{G`{{h{e}}}}c{h{e}}{h{g}}c}Ff{}{}{}}{{{h{{N`{c}}}}c{G`{{h{g}}}}c{h{g}}{h{e}}c}FfA`{}{{K`{ec}}}}{{{h{{Nb{c}}}}c{G`{{h{g}}}}c{h{g}}{h{e}}c}FfA`{}{{K`{ec}}}}{{{h{{Nd{c}}}}c{G`{{h{g}}}}c{h{g}}{h{e}}c}FfA`{}{{K`{ec}}}}{{{h{{Nf{c}}}}c{G`{{h{g}}}}c{h{g}}{h{e}}c}FfA`{}{{K`{ec}}}}{{{h{{N`{c}}}}{h{AnGj}}}H`Fn}{{{h{{Nb{c}}}}{h{AnGj}}}H`Fn}{{{h{{Nd{c}}}}{h{AnGj}}}H`Fn}{{{h{{Nf{c}}}}{h{AnGj}}}H`Fn}{cc{}}000{{{h{c}}}e{}{}}000{ce{}{}}000{{{h{c}}}Ff{}}000{c{{n{{N`{c}}l}}}A`}{c{{n{{Nb{c}}l}}}A`}{{cc}{{n{{Nd{c}}l}}}A`}{{cc}{{n{{Nf{c}}l}}}A`}{{{h{Mn}}}Ff}{{{h{{N`{c}}}}}FfA`}{{{h{{Nb{c}}}}}FfA`}{{{h{{Nd{c}}}}}FfA`}{{{h{{Nf{c}}}}}FfA`}{{{h{{N`{c}}}}e}nIjIh}{{{h{{Nb{c}}}}e}nIjIh}{{{h{{Nd{c}}}}e}nIjIh}{{{h{{Nf{c}}}}e}nIjIh}????{{{h{c}}}{{G`{e}}}{}{}}000{{{h{c}}}e{}{}}000{c{{n{e}}}{}{}}0000000{{{h{c}}}Il{}}000{ce{}{}}000`{{{h{c}}}{{h{e}}}{}{}}{{{h{Anc}}}{{h{Ane}}}{}{}}{{{h{{Nh{ce}}}}}{{Nh{ce}}}DnDn}{{{h{c}}{h{Ane}}}El{}{}}{c{{n{{Nh{eg}}}}}FjFlFl}{cc{}}9{{{h{An{Nh{ce}}}}{h{An{Ab{g}}}}{Eb{cElElElEle}}}{{n{{Gf{{Eb{cElElElEle}}{G`{Dl}}}}l}}}{DnKbKlKj}{A`Nj}{{Cd{}{{b{c}}{Bb{e}}}}}}7{{{h{c}}}Ff{}}{{{h{{Nh{ce}}}}}{{h{Db}}}{DnKbKlKj}{A`Nj}}{{{j{c}}}{{Nh{ce}}}{}{}}3{{{h{{Nh{ce}}}}g}nIjIjIh}{{{h{An{Nh{ce}}}}{h{{Eb{cElElElEle}}}}}Eh{DnKbKlKj}{A`Nj}}?{{{h{c}}}{{G`{e}}}{}{}}{{{h{c}}}e{}{}}{c{{n{e}}}{}{}}0{{{h{c}}}Il{}}{ce{}{}}{{{Nh{ce}}e}{{n{{Nh{ce}}l}}}{}{}}0000``{{{h{c}}}{{h{e}}}{}{}}0{{{h{Anc}}}{{h{Ane}}}{}{}}0{{{h{{Nl{ce}}}}}{{Nl{ce}}}DnDn}{{{h{{Nn{c}}}}}{{Nn{c}}}Dn}{{{h{c}}{h{Ane}}}El{}{}}0{{}{{Nn{c}}}A`}{c{{n{{Nl{eg}}}}}FjFlFl}{c{{n{{Nn{e}}}}}FjFl}{cc{}}0==::{{{h{c}}}Ff{}}0{{{h{{Nl{me}}}}}{{h{Db}}}{DnKbK`KdKjKfO`}{A`Kh}{{Kh{e}}{Kj{ec}}}{Dn{K`{cc}}}{{Ch{}{{b{c}}{Cf{g}}}}{Cl{}{{b{c}}{Cj{i}}}}}{Dn{Kn{ce}}{Aj{k{Eb{cgElElEle}}}}}}{{{h{{Nn{c}}}}}{{h{Db}}}A`}{c{{Nl{ce}}}{}A`}7{{{h{An{Nl{me}}}}{h{An{Ab{k}}}}{Eb{cgEliEle}}}{{n{{Gf{{Eb{cgEliEle}}{G`{Dl}}}}l}}}{DnKbK`KdKjKfO`}{A`Kh}{{Kh{e}}{Kj{ec}}}{Dn{K`{cc}}}{{Ch{}{{b{c}}{Cf{g}}}}{Cl{}{{b{c}}{Cj{i}}}}}{Dn{Kn{ce}}{Aj{k{Eb{cgElElEle}}}}}}{{{h{An{Nn{c}}}}{h{An{Ab{k}}}}{Eb{egEliElc}}}{{n{{Gf{{Eb{egEliElc}}{G`{Dl}}}}l}}}A`{}{}{}{{Ch{}{{b{e}}{Cf{g}}}}{Cl{}{{b{e}}{Cj{i}}}}}}{{{h{{Nl{ce}}}}g}nIjIjIh}{{{h{{Nn{c}}}}e}nIjIh}{{{h{An{Nl{me}}}}{h{{Eb{cgEliEle}}}}}Eh{DnKbK`KdKjKfO`}{A`Kh}{{Kh{e}}{Kj{ec}}}{Dn{K`{cc}}}{{Ch{}{{b{c}}{Cf{g}}}}{Cl{}{{b{c}}{Cj{i}}}}}{Dn{Kn{ce}}{Aj{k{Eb{cgElElEle}}}}}}{{{h{c}}}e{}{}}0{{{h{c}}}{{G`{e}}}{}{}}011{c{{n{e}}}{}{}}000{{{h{c}}}Il{}}0{ce{}{}}0{{{Nl{ce}}e}{{Nl{ce}}}{}A`}{{{Nn{c}}c}{{n{{Nn{c}}l}}}A`}{{{Nl{ce}}e}{{n{{Nl{ce}}l}}}{}A`}``{{{h{c}}}{{h{e}}}{}{}}0{{{h{Anc}}}{{h{Ane}}}{}{}}0{{{h{{Ob{ceg}}}}}{{Ob{ceg}}}DnDnDn}{{{h{{Od{ce}}}}}{{Od{ce}}}DnDn}{{{h{c}}{h{Ane}}}El{}{}}0`{c{{n{{Ob{egi}}}}}FjFlFlFl}{c{{n{{Od{eg}}}}}FjFlFl}{{{h{{Od{ce}}}}{h{{Od{ce}}}}}FfGbGb}{{{h{{Od{ce}}}}{h{AnGj}}}H`FnFn}{cc{}}0{{{h{c}}}e{}{}}0{{{h{An{Ob{ceg}}}}{h{An{Ab{i}}}}{Ef{{Od{ce}}e}}}{{n{{Gf{{Ef{{Od{ce}}e}}{G`{Dl}}}}l}}}{DnCbKlKbKjO`OfOh}A`Oj{{Cd{}{{b{c}}{Bb{e}}}}Cb}}??{{{h{c}}}Ff{}}0{{{h{{Ob{ceg}}}}}{{h{Db}}}{DnCbKlKbKjO`OfOh}A`Oj}{{{Gf{cc}}Dd}{{Ob{ceOl}}}{}{}}{{cec}{{Od{ce}}}DnA`}4`{{{h{{Ob{ceg}}}}i}nIjIjIjIh}{{{h{{Od{ce}}}}g}nIjIjIh}77{{{h{c}}}{{G`{e}}}{}{}}088{c{{n{e}}}{}{}}000{{{h{c}}}Il{}}0{ce{}{}}0{{{Ob{ceg}}e}{{n{{Ob{ceg}}l}}}{}{}Oj}0{{{Ob{ceg}}i}{{Ob{cei}}}{}{}OjOj}1`````{{{h{c}}}{{h{e}}}{}{}}0000{{{h{Anc}}}{{h{Ane}}}{}{}}0000{{{h{{On{ce}}}}}{{On{ce}}}DnDn}{{{h{{A@`{ce}}}}}{{A@`{ce}}}DnDn}{{{h{{A@b{cegi}}}}}{{A@b{cegi}}}DnDnDnDn}{{{h{{A@d{ce}}}}}{{A@d{ce}}}DnDn}{{{h{{A@f{ce}}}}}{{A@f{ce}}}DnDn}{{{h{c}}{h{Ane}}}El{}{}}0000{c{{n{{On{eg}}}}}FjFlFl}{c{{n{{A@`{eg}}}}}FjFlFl}{c{{n{{A@b{egik}}}}}FjFlFlFlFl}{c{{n{{A@d{eg}}}}}FjFlFl}{c{{n{{A@f{eg}}}}}FjFlFl}{cc{}}0000{{{h{c}}}e{}{}}0000{{{h{An{On{mi}}}}{h{An{Ab{k}}}}{Eb{ceElgEli}}}{{n{{Gf{{Eb{ceElgEli}}{G`{Dl}}}}l}}}{DnKbK`K`}{DnKhKjK`Kb}{KbK`K`KlKjLnA@h}A`{{Cd{}{{b{c}}{Bb{i}}}}{Ch{}{{b{c}}{Cf{e}}}}}{Dn{Kn{ci}}{Aj{k{Eb{ceElElEli}}}}}}{{{h{An{A@`{mg}}}}{h{An{Ab{k}}}}{Eb{ceEliElg}}}{{n{{Gf{{Eb{ceEliElg}}{G`{Dl}}}}l}}}{DnKbK`K`Kj}{DnKbKhK`}A`{DnKbK`KlKj}{{Cd{}{{b{c}}{Bb{g}}}}{Ch{}{{b{c}}{Cf{e}}}}}{Dn{Kn{cg}}{Aj{k{Eb{ceElElElg}}}}}}{{{h{An{A@b{kcge}}}}{h{An{Ab{i}}}}{Eb{cgElElEle}}}{{n{{Gf{{Eb{cgElElEle}}{G`{Dl}}}}l}}}{DnKbKbKlKlK`KjKjKjA@jA@lO`Oh}A`{DnKhKbKlKlK`K`KjKjO`Oh}{{Cd{}{{b{c}}{Bb{e}}}}{Ch{}{{b{c}}{Cf{g}}}}}{Dn{Kn{ce}}{Aj{{`{icge}}{Eb{cgElElEle}}}}}}{{{h{An{A@d{mg}}}}{h{An{Ab{k}}}}{Eb{ceEliElg}}}{{n{{Gf{{Eb{ceEliElg}}{G`{Dl}}}}l}}}{DnKbK`K`K`KhKj}{DnKbKhKb}A`{K`K`KlKj}{{Cd{}{{b{c}}{Bb{g}}}}{Ch{}{{b{c}}{Cf{e}}}}}{Dn{Kn{cg}}{Aj{k{Eb{ceElElElg}}}}}}{{{h{An{A@f{mc}}}}{h{An{Ab{k}}}}{Eb{eiElgElc}}}{{n{{Gf{{Eb{eiElgElc}}{G`{Dl}}}}l}}}{A`Kh}{}{}{}{{Cd{}{{b{e}}{Bb{c}}}}{Ch{}{{b{e}}{Cf{i}}}}{Cl{}{{b{e}}{Cj{g}}}}}{Dn{A@n{c}}{Aj{k{Eb{eiElgElc}}}}}}{ce{}{}}0000{{{h{c}}}Ff{}}0000{{{h{{On{mi}}}}}{{h{Db}}}{DnKbK`K`}{DnKhKjK`Kb}{KbK`K`KlKjLnA@h}A`{{Cd{}{{b{c}}{Bb{i}}}}{Ch{}{{b{c}}{Cf{e}}}}}{Dn{Kn{ci}}{Aj{k{Eb{ceElElEli}}}}}}{{{h{{A@`{mg}}}}}{{h{Db}}}{DnKbK`K`Kj}{DnKbKhK`}A`{DnKbK`KlKj}{{Cd{}{{b{c}}{Bb{g}}}}{Ch{}{{b{c}}{Cf{e}}}}}{Dn{Kn{cg}}{Aj{k{Eb{ceElElElg}}}}}}{{{h{{A@b{kcge}}}}}{{h{Db}}}{DnKbKbKlKlK`KjKjKjA@jA@lO`Oh}A`{DnKhKbKlKlK`K`KjKjO`Oh}{{Cd{}{{b{c}}{Bb{e}}}}{Ch{}{{b{c}}{Cf{g}}}}}{Dn{Kn{ce}}{Aj{{`{icge}}{Eb{cgElElEle}}}}}}{{{h{{A@d{mg}}}}}{{h{Db}}}{DnKbK`K`K`KhKj}{DnKbKhKb}A`{K`K`KlKj}{{Cd{}{{b{c}}{Bb{g}}}}{Ch{}{{b{c}}{Cf{e}}}}}{Dn{Kn{cg}}{Aj{k{Eb{ceElElElg}}}}}}{{{h{{A@f{mc}}}}}{{h{Db}}}{A`Kh}{}{}{}{{Cd{}{{b{e}}{Bb{c}}}}{Ch{}{{b{e}}{Cf{i}}}}{Cl{}{{b{e}}{Cj{g}}}}}{Dn{A@n{c}}{Aj{k{Eb{eiElgElc}}}}}}{c{{On{ce}}}{}A`}{c{{A@`{ce}}}{}A`}{{cDd}{{A@b{cegi}}}{}{}{}A`}{c{{A@d{ce}}}{}A`}{c{{A@f{ce}}}{}A`}{{{h{An{On{mi}}}}{h{An{Ab{k}}}}{Eb{ceElgEli}}}{{n{{Gf{{Eb{ceElgEli}}{G`{Dl}}}}l}}}{DnKbK`K`}{DnKhKjK`Kb}{KbK`K`KlKjLnA@h}A`{{Cd{}{{b{c}}{Bb{i}}}}{Ch{}{{b{c}}{Cf{e}}}}}{Dn{Kn{ci}}{Aj{k{Eb{ceElElEli}}}}}}{{{h{An{A@`{mg}}}}{h{An{Ab{k}}}}{Eb{ceEliElg}}}{{n{{Gf{{Eb{ceEliElg}}{G`{Dl}}}}l}}}{DnKbK`K`Kj}{DnKbKhK`}A`{DnKbK`KlKj}{{Cd{}{{b{c}}{Bb{g}}}}{Ch{}{{b{c}}{Cf{e}}}}}{Dn{Kn{cg}}{Aj{k{Eb{ceElElElg}}}}}}{{{h{An{A@b{kcge}}}}{h{An{Ab{i}}}}{Eb{cgElElEle}}}{{n{{Gf{{Eb{cgElElEle}}{G`{Dl}}}}l}}}{DnKbKbKlKlK`KjKjKjA@jA@lO`Oh}A`{DnKhKbKlKlK`K`KjKjO`Oh}{{Cd{}{{b{c}}{Bb{e}}}}{Ch{}{{b{c}}{Cf{g}}}}}{Dn{Kn{ce}}{Aj{{`{icge}}{Eb{cgElElEle}}}}}}{{{h{An{A@d{mg}}}}{h{An{Ab{k}}}}{Eb{ceEliElg}}}{{n{{Gf{{Eb{ceEliElg}}{G`{Dl}}}}l}}}{DnKbK`K`K`KhKj}{DnKbKhKb}A`{K`K`KlKj}{{Cd{}{{b{c}}{Bb{g}}}}{Ch{}{{b{c}}{Cf{e}}}}}{Dn{Kn{cg}}{Aj{k{Eb{ceElElElg}}}}}}{{{h{An{A@f{mc}}}}{h{An{Ab{k}}}}{Eb{eiElgElc}}}{{n{{Gf{{Eb{eiElgElc}}{G`{Dl}}}}l}}}{A`Kh}{}{}{}{{Cd{}{{b{e}}{Bb{c}}}}{Ch{}{{b{e}}{Cf{i}}}}{Cl{}{{b{e}}{Cj{g}}}}}{Dn{A@n{c}}{Aj{k{Eb{eiElgElc}}}}}}{{{h{{On{ce}}}}g}nIjIjIh}{{{h{{A@`{ce}}}}g}nIjIjIh}{{{h{{A@b{cegi}}}}k}nIjIjIjIjIh}{{{h{{A@d{ce}}}}g}nIjIjIh}{{{h{{A@f{ce}}}}g}nIjIjIh}{{{h{An{On{mi}}}}{h{{Eb{ceElgEli}}}}}Eh{DnKbK`K`}{DnKhKjK`Kb}{KbK`K`KlKjLnA@h}A`{{Cd{}{{b{c}}{Bb{i}}}}{Ch{}{{b{c}}{Cf{e}}}}}{Dn{Kn{ci}}{Aj{k{Eb{ceElElEli}}}}}}{{{h{An{A@`{mg}}}}{h{{Eb{ceEliElg}}}}}Eh{DnKbK`K`Kj}{DnKbKhK`}A`{DnKbK`KlKj}{{Cd{}{{b{c}}{Bb{g}}}}{Ch{}{{b{c}}{Cf{e}}}}}{Dn{Kn{cg}}{Aj{k{Eb{ceElElElg}}}}}}{{{h{An{A@b{kcge}}}}{h{{Eb{cgElElEle}}}}}Eh{DnKbKbKlKlK`KjKjKjA@jA@lO`Oh}A`{DnKhKbKlKlK`K`KjKjO`Oh}{{Cd{}{{b{c}}{Bb{e}}}}{Ch{}{{b{c}}{Cf{g}}}}}{Dn{Kn{ce}}{Aj{{`{icge}}{Eb{cgElElEle}}}}}}{{{h{An{A@d{mg}}}}{h{{Eb{ceEliElg}}}}}Eh{DnKbK`K`K`KhKj}{DnKbKhKb}A`{K`K`KlKj}{{Cd{}{{b{c}}{Bb{g}}}}{Ch{}{{b{c}}{Cf{e}}}}}{Dn{Kn{cg}}{Aj{k{Eb{ceElElElg}}}}}}{{{h{An{A@f{mc}}}}{h{{Eb{eiElgElc}}}}}Eh{A`Kh}{}{}{}{{Cd{}{{b{e}}{Bb{c}}}}{Ch{}{{b{e}}{Cf{i}}}}{Cl{}{{b{e}}{Cj{g}}}}}{Dn{A@n{c}}{Aj{k{Eb{eiElgElc}}}}}}{{{h{c}}}e{}{}}0000{{{h{c}}}{{G`{e}}}{}{}}000011111{c{{n{e}}}{}{}}000000000{{{h{c}}}Il{}}0000{ce{}{}}0000{{{A@d{ce}}e}{{n{{A@d{ce}}l}}}{}A`}{{{A@f{ce}}e}{{n{{A@f{ce}}l}}}{}A`}0{{{A@b{cegi}}i}{{n{{A@b{cegi}}l}}}{}{}{}A`}{{{A@f{ce}}e}{{A@f{ce}}}{}A`}{{{On{ce}}e}{{n{{On{ce}}l}}}{}A`}240{{{A@`{ce}}e}{{n{{A@`{ce}}l}}}{}A`}354`````````{{{h{{B`{}{{b{c}}{Bb{e}}{d{g}}}}}}{h{c}}g}{{n{el}}}{}{}{}}{{{h{c}}}{{h{e}}}{}{}}0{{{h{Anc}}}{{h{Ane}}}{}{}}0{{{h{{AA`{c}}}}}{{AA`{c}}}Dn}{{{h{{AAb{ce}}}}}{{AAb{ce}}}DnDn}{{{h{c}}{h{Ane}}}El{}{}}0{{}{{AA`{c}}}{}}{c{{n{{AA`{e}}}}}FjFl}{c{{n{{AAb{eg}}}}}FjFlFl}{{{h{{AA`{c}}}}{h{{AA`{c}}}}}FfGb}{{{h{{AA`{c}}}}{h{AnGj}}}H`Fn}{cc{}}0{{{h{c}}}e{}{}}0{{{h{An{AAb{ce}}}}{h{An{Ab{i}}}}{Eb{gElElElElc}}}{{n{{Gf{{Eb{gElElElElc}}{G`{Dl}}}}l}}}A`OjDn{{Cd{}{{b{g}}{Bb{c}}}}{B`{}{{b{g}}{Bb{g}}{d{c}}}}}}{ce{}{}}0{{{h{c}}}Ff{}}0{{{h{{AAb{ce}}}}}{{h{Db}}}A`Oj}{c{{n{{AAb{cAAd}}l}}}A`}{{ce}{{n{{AAb{ce}}l}}}A`{}}5{{{h{{AA`{c}}}}e}nIjIh}{{{h{{AAb{ce}}}}g}nIjIjIh}{{{h{An{AAb{ce}}}}{h{{Eb{gElElElElc}}}}}EhA`OjDn}99{{{h{c}}}{{G`{e}}}{}{}}0::{c{{n{e}}}{}{}}000{{{h{c}}}Il{}}0::{{{AAb{ce}}Hd}{{AAb{ce}}}A`{}}0000{{{AAb{ce}}{AA`{c}}}{{AAb{ce}}}A`{}}`````{{{h{c}}}{{h{e}}}{}{}}000{{{h{Anc}}}{{h{Ane}}}{}{}}000{{{h{{AAf{c}}}}}{{AAf{c}}}Dn}{{{h{{AAh{c}}}}}{{AAh{c}}}Dn}{{{h{{AAj{ce}}}}}{{AAj{ce}}}DnDn}{{{h{{AAl{ce}}}}}{{AAl{ce}}}DnDn}{{{h{c}}{h{Ane}}}El{}{}}000{{}{{AAf{c}}}Fh}{{}{{AAh{c}}}Fh}{{}{{AAj{ce}}}FhFh}{c{{n{{AAf{e}}}}}FjFl}{c{{n{{AAh{e}}}}}FjFl}{c{{n{{AAj{eg}}}}}FjFlFl}{c{{n{{AAl{eg}}}}}FjFlFl}{{{h{{AAf{c}}}}{h{{AAf{c}}}}}FfGb}{{{h{{AAh{c}}}}{h{{AAh{c}}}}}FfGb}{{{h{{AAf{c}}}}{h{AnGj}}}H`Fn}{{{h{{AAh{c}}}}{h{AnGj}}}H`Fn}{cc{}}000{{{h{c}}}e{}{}}000{{{h{An{AAj{ec}}}}{h{An{Ab{g}}}}{Eb{eeEliElc}}}{{n{{Gf{{Eb{eeEliElc}}{G`{Dl}}}}l}}}A`{DnKjKhK`KlO`}{}{{K`{ee}}}}{{{h{An{AAl{mc}}}}{h{An{Ab{k}}}}{Eb{egEliElc}}}{{n{{Gf{{Eb{egEliElc}}{G`{Dl}}}}l}}}A`{}{}{Dn{K`{ee}}}{{Cd{}{{b{e}}{Bb{c}}}}{Ch{}{{b{e}}{Cf{g}}}}{Cl{}{{b{e}}{Cj{i}}}}}{Dn{A@n{c}}{Aj{k{Eb{egEliElc}}}}}}{ce{}{}}000{{{h{c}}}Ff{}}000{{{h{{AAf{c}}}}}{{h{Db}}}A`}{{{h{{AAh{c}}}}}{{h{Db}}}A`}{{{h{{AAj{ec}}}}}{{h{Db}}}A`{DnKjKhK`KlO`}}{{{h{{AAl{mc}}}}}{{h{Db}}}A`{}{}{Dn{K`{ee}}}{{Cd{}{{b{e}}{Bb{c}}}}{Ch{}{{b{e}}{Cf{g}}}}{Cl{}{{b{e}}{Cj{i}}}}}{Dn{A@n{c}}{Aj{k{Eb{egEliElc}}}}}}{{}{{AAf{c}}}A`}{{}{{AAh{c}}}A`}{{}{{AAj{ec}}}A`{}}{c{{AAl{ce}}}{}A`}{{{h{An{AAf{c}}}}{h{An{Ab{k}}}}{Eb{eiElgElc}}}{{n{{Gf{{Eb{eiElgElc}}{G`{Dl}}}}l}}}A`{}{}{}{{Ch{}{{b{e}}{Cf{i}}}}{Cl{}{{b{e}}{Cj{g}}}}}}{{{h{An{AAh{c}}}}{h{An{Ab{i}}}}{Eb{eeElgElc}}}{{n{{Gf{{Eb{eeElgElc}}{G`{Dl}}}}l}}}A`{}{}{{Ch{}{{b{e}}{Cf{e}}}}{Cl{}{{b{e}}{Cj{g}}}}}}=<{{{h{{AAf{c}}}}{h{{AAf{c}}}}}{{G`{En}}}AAn}{{{h{{AAh{c}}}}{h{{AAh{c}}}}}{{G`{En}}}AAn}{{cccc}cA`}{{{h{{AAf{c}}}}e}nIjIh}{{{h{{AAh{c}}}}e}nIjIh}{{{h{{AAj{ce}}}}g}nIjIjIh}{{{h{{AAl{ce}}}}g}nIjIjIh}{{{h{AnA@n}}c}El{}}{{{h{An{AAf{c}}}}c}ElA`}{{{h{An{AAh{c}}}}c}ElA`}{{{h{An{AAj{ce}}}}e}El{}A`}{{{h{An{AAf{c}}}}{h{{Eb{eiElgElc}}}}}EhA`{DnKjAB`}{}{KjAB`Kh}}{{{h{An{AAh{c}}}}{h{{Eb{eeElgElc}}}}}EhA`{DnKjKhK`KlKb}{M`K`}}{{{h{An{AAj{ec}}}}{h{{Eb{eeElgElc}}}}}EhA`{DnKjKhK`KlO`}{{K`{ee}}}}{{{h{An{AAl{mc}}}}{h{{Eb{egEliElc}}}}}EhA`{}{}{Dn{K`{ee}}}{{Cd{}{{b{e}}{Bb{c}}}}{Ch{}{{b{e}}{Cf{g}}}}{Cl{}{{b{e}}{Cj{i}}}}}{Dn{A@n{c}}{Aj{k{Eb{egEliElc}}}}}}{{{h{c}}}e{}{}}000{{{h{c}}}{{G`{e}}}{}{}}0001111{c{{n{e}}}{}{}}0000000{{{h{c}}}Il{}}000{ce{}{}}000{{{AAj{ec}}c}{{n{{AAj{ec}}l}}}A`{}}{{{AAl{ce}}e}{{n{{AAl{ce}}l}}}{}A`}{{{AAj{ec}}Hd}{{AAj{ec}}}A`{}}11","D":"EHn","p":[[17,"Param"],[17,"Float"],[10,"LinearProgram",8,1711],[1,"reference"],[5,"Vec",1712],[5,"Error",8,1713],[6,"Result",1714],[10,"ArgminFloat",8,1715],[5,"Problem",8,1711],[5,"Executor",8,1716],[6,"ObserverMode",658],[10,"State",8,1717],[10,"Solver",8,1718],[10,"Observe",658],[0,"mut"],[10,"Anneal",1542],[17,"Output"],[10,"Operator",8,1711],[10,"Error",1719],[6,"KvValue",8,1720],[5,"String",1721],[5,"Backtrace",1722],[1,"slice"],[10,"Borrow",1723],[10,"SyncAlias",8,1724],[10,"CostFunction",8,1711],[17,"Gradient"],[10,"Gradient",8,1711],[17,"Hessian"],[10,"Hessian",8,1711],[17,"Jacobian"],[10,"Jacobian",8,1711],[1,"str"],[1,"usize"],[10,"FnOnce",1725],[5,"Chain",1713],[10,"Checkpoint",628],[5,"KV",8,1720],[10,"Clone",1726],[5,"OptimizationResult",8,1727],[5,"IterState",8,1728],[5,"LinearProgramState",8,1729],[5,"PopulationState",8,1730],[6,"TerminationStatus",8,1731],[6,"TerminationReason",8,1731],[1,"unit"],[6,"Ordering",1732],[10,"Display",1733],[10,"Send",1734],[10,"Sync",1734],[1,"bool"],[10,"Default",1735],[10,"Deserializer",1736],[10,"Deserialize",1736],[10,"Debug",1733],[6,"Option",1737],[10,"PartialEq",1732],[17,"Item"],[1,"tuple"],[10,"IntoIterator",1738],[5,"Formatter",1733],[5,"Error",1733],[6,"ArgminError",8,1739],[8,"Result",1733],[1,"never"],[1,"u64"],[1,"i32"],[1,"u32"],[1,"f32"],[1,"f64"],[1,"i64"],[10,"AsRef",1740],[5,"HashMap",1741],[5,"Duration",1742],[10,"Hasher",1743],[10,"Serializer",1744],[10,"Serialize",1744],[5,"TypeId",1745],[6,"CheckpointingFrequency",628],[5,"Observers",658],[5,"TestProblem",710],[5,"TestSparseProblem",710],[5,"TestSolver",710],[5,"BrentOpt",801,1746],[5,"BrentRoot",801,1747],[5,"ConjugateGradient",846,1748],[5,"NonlinearConjugateGradient",846,1749],[10,"ArgminDot",1750],[10,"ArgminSub",1750],[10,"ArgminScaledAdd",1750],[10,"ArgminConj",1750],[10,"ArgminL2Norm",1750],[10,"ArgminMul",1750],[10,"ArgminAdd",1750],[10,"LineSearch",1099],[10,"NLCGBetaUpdate",894],[5,"FletcherReeves",894],[5,"PolakRibiere",894],[5,"PolakRibierePlus",894],[5,"HestenesStiefel",894],[5,"GaussNewtonLS",984,1751],[5,"GaussNewton",984,1752],[10,"ArgminTranspose",1750],[10,"ArgminInv",1750],[5,"GoldenSectionSearch",1033],[5,"SteepestDescent",1057,1753],[5,"Landweber",1078],[5,"BacktrackingLineSearch",1099,1754],[5,"HagerZhangLineSearch",1099,1755],[5,"MoreThuenteLineSearch",1099,1756],[10,"LineSearchCondition",1191],[5,"ArmijoCondition",1191,1757],[5,"GoldsteinCondition",1191,1758],[5,"StrongWolfeCondition",1191,1759],[5,"WolfeCondition",1191,1760],[5,"NelderMead",1290],[10,"Sum",1761],[5,"NewtonCG",1318,1762],[5,"Newton",1318,1763],[10,"ArgminZeroLike",1750],[5,"ParticleSwarm",1365],[5,"Particle",1365],[10,"ArgminRandom",1750],[10,"ArgminMinMax",1750],[10,"Rng",1764],[5,"StdRng",1765],[5,"BFGS",1414,1766],[5,"DFP",1414,1767],[5,"LBFGS",1414,1768],[5,"SR1",1414,1769],[5,"SR1TrustRegion",1414,1770],[10,"ArgminEye",1750],[10,"ArgminL1Norm",1750],[10,"ArgminSignum",1750],[10,"TrustRegionRadius",1601],[6,"SATempFunc",1542],[5,"SimulatedAnnealing",1542],[5,"Xoshiro256PlusPlus",1771],[5,"CauchyPoint",1601,1772],[5,"Dogleg",1601,1773],[5,"Steihaug",1601,1774],[5,"TrustRegion",1601,1775],[10,"PartialOrd",1732],[10,"ArgminWeightedDot",1750],[15,"InvalidParameter",621],[15,"NotImplemented",621],[15,"NotInitialized",621],[15,"ConditionViolated",621],[15,"CheckpointNotFound",621],[15,"PotentialBug",621],[15,"ImpossibleError",621]],"r":[[11,1739],[12,1715],[16,1711],[17,1713],[18,1716],[22,1711],[24,1711],[30,1728],[31,1711],[33,1720],[34,1720],[35,1099],[36,1711],[37,1729],[39,894],[43,1711],[44,1727],[54,1730],[56,1711],[57,1724],[58,1718],[61,1717],[63,1724],[66,1731],[67,1731],[69,1601],[801,1746],[802,1747],[846,1748],[847,1749],[984,1752],[985,1751],[1057,1753],[1099,1754],[1100,1755],[1102,1756],[1191,1757],[1192,1758],[1194,1759],[1195,1760],[1318,1763],[1319,1762],[1414,1766],[1415,1767],[1416,1768],[1417,1769],[1418,1770],[1601,1772],[1602,1773],[1603,1774],[1604,1775]],"b":[[75,"impl-AsRef%3Cdyn+Error+%2B+Send+%2B+Sync%3E-for-Error"],[76,"impl-AsRef%3Cdyn+Error%3E-for-Error"],[203,"impl-Display-for-Error"],[204,"impl-Debug-for-Error"],[205,"impl-Display-for-ArgminError"],[206,"impl-Debug-for-ArgminError"],[207,"impl-Debug-for-KvValue"],[208,"impl-Display-for-KvValue"],[209,"impl-Debug-for-KV"],[210,"impl-Display-for-KV"],[216,"impl-Display-for-TerminationStatus"],[217,"impl-Debug-for-TerminationStatus"],[218,"impl-Display-for-TerminationReason"],[219,"impl-Debug-for-TerminationReason"],[225,"impl-From%3Cu64%3E-for-KvValue"],[226,"impl-From%3Ci32%3E-for-KvValue"],[227,"impl-From%3Cu32%3E-for-KvValue"],[228,"impl-From%3Cf32%3E-for-KvValue"],[229,"impl-From%3Cf64%3E-for-KvValue"],[230,"impl-From%3C%26str%3E-for-KvValue"],[232,"impl-From%3CString%3E-for-KvValue"],[233,"impl-From%3Cbool%3E-for-KvValue"],[234,"impl-From%3Ci64%3E-for-KvValue"],[262,"impl-IterState%3CP,+G,+J,+H,+R,+F%3E"],[263,"impl-State-for-IterState%3CP,+G,+J,+H,+R,+F%3E"],[265,"impl-State-for-PopulationState%3CP,+F%3E"],[266,"impl-PopulationState%3CP,+F%3E"],[273,"impl-State-for-IterState%3CP,+G,+J,+H,+R,+F%3E"],[274,"impl-IterState%3CP,+G,+J,+H,+R,+F%3E"],[276,"impl-PopulationState%3CP,+F%3E"],[277,"impl-State-for-PopulationState%3CP,+F%3E"],[322,"impl-State-for-IterState%3CP,+G,+J,+H,+R,+F%3E"],[323,"impl-IterState%3CP,+G,+J,+H,+R,+F%3E"],[325,"impl-State-for-PopulationState%3CP,+F%3E"],[326,"impl-PopulationState%3CP,+F%3E"],[639,"impl-Debug-for-CheckpointingFrequency"],[640,"impl-Display-for-CheckpointingFrequency"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAOgDaAAkAAAAKAAAAEYAAABMAAEAWQAXAIcAEQCxAA4AwwACAMcAFQDeAAEA4gAFAOkAAgD0AAwAWQEBAHsBCwDUAQYAEgJLAGICCwB6AgcAhAIBAIcCAACLAgcAmgIIAKQCAgCpAgEArgIBALgCDgDMAgsA2gILAOkCAgDuAgEA9AICAPgCAAD8AhgAJAMJADADAwA2AwMAPAMDAEEDDQBSAwkAXgMBAGEDAQBlAwMAbAMAAG8DDwCEAxsApAMDAKwDAwC0AxsA1QMDANsDCgDoAwIA7QMDAPMDEwALBAQAEQQBABQEAQAXBAkAIwQEACkEAAArBAEALgQIADgEBAA+BAAAQAQBAEMECABQBAsAXQQGAGcEBQB0BAUAfQQCAIUEGQCtBBsAygQHANYEAwDeBAMA5wQjAAwFBAASBQEAFQUBABgFCQApBQoANgUBADoFAwBABRIAWAUHAGEFAwBnBQIAbAUCAHMFDwCMBRgAqgUJALkFCQDIBTEAEQYMACAGAgAlBgIAKwYQAEcGGgBmBgUAcAYHAHwGBQCDBgMAiwYfAA=="}],\
["argmin_checkpointing_file",{"t":"PKGPFPNNNNNNNNNNONNONNNMNONNNNNNNNNNMNNMNNNNNNNNNNNNNNNNN","n":["Always","Checkpoint","CheckpointingFrequency","Every","FileCheckpoint","Never","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","directory","eq","eq","filename","fmt","fmt","fmt","frequency","frequency","frequency","from","from","from_subset","from_subset","hash","hash","into","into","is_in_subset","is_in_subset","load","load","new","save","save","save_cond","to_owned","to_owned","to_string","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"argmin_checkpointing_file"],[57,"argmin::core::checkpointing"],[58,"core::fmt"],[59,"core::result"],[60,"core::hash"],[61,"core::option"],[62,"anyhow"],[63,"serde::ser"],[64,"serde::de"],[65,"core::convert"],[66,"alloc::string"],[67,"core::any"]],"i":[4,0,0,4,0,4,3,4,3,4,3,4,3,4,3,4,3,3,4,3,3,4,4,11,3,3,3,4,3,4,3,4,3,4,3,4,11,3,3,11,3,11,3,4,4,3,4,3,4,3,4,3,4,3,4,3,4],"f":"``````{{{b{c}}}{{b{e}}}{}{}}0{{{b{dc}}}{{b{de}}}{}{}}0{{{b{f}}}f}{{{b{h}}}h}{{{b{c}}{b{de}}}j{}{}}0{{}f}{{}h}`{{{b{f}}{b{f}}}l}{{{b{h}}{b{h}}}l}`{{{b{f}}{b{dn}}}A`}{{{b{h}}{b{dn}}}{{Ad{jAb}}}}0{{{b{Af}}}h}{{{b{f}}}h}`{cc{}}0{{{b{c}}}e{}{}}0{{{b{f}}{b{dc}}}jAh}{{{b{h}}{b{dc}}}jAh}{ce{}{}}0{{{b{c}}}l{}}0{{{b{Af}}}{{Ad{{Al{{Aj{ce}}}}An}}}{}{}}{{{b{f}}}{{Ad{{Al{{Aj{ce}}}}An}}}{B`Bb}{B`Bb}}{{cch}f{{Bf{Bd}}}}{{{b{Af}}{b{c}}{b{e}}}{{Ad{jAn}}}{}{}}{{{b{f}}{b{c}}{b{e}}}{{Ad{jAn}}}{B`Bb}{B`Bb}}{{{b{Af}}{b{c}}{b{e}}Bh}{{Ad{jAn}}}{}{}}::{{{b{c}}}Bj{}}{{{b{c}}}{{Al{e}}}{}{}}0<<{c{{Ad{e}}}{}{}}000{{{b{c}}}Bl{}}0;;","D":"Bn","p":[[1,"reference"],[0,"mut"],[5,"FileCheckpoint",0],[6,"CheckpointingFrequency",0,57],[1,"unit"],[1,"bool"],[5,"Formatter",58],[8,"Result",58],[5,"Error",58],[6,"Result",59],[10,"Checkpoint",0,57],[10,"Hasher",60],[1,"tuple"],[6,"Option",61],[5,"Error",62],[10,"Serialize",63],[10,"DeserializeOwned",64],[1,"str"],[10,"AsRef",65],[1,"u64"],[5,"String",66],[5,"TypeId",67]],"r":[[1,57],[2,57]],"b":[[21,"impl-Debug-for-CheckpointingFrequency"],[22,"impl-Display-for-CheckpointingFrequency"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACIABwAHAAcAEAAAABIAAQAVAAIAHQADACMAAQArAA4A"}],\
["argmin_math",{"t":"KKKKKKKKKKKKKKKKKKKFKMNNNNNNMNNNMMNNNNMMNNNNNNNNNNNNMNNMMMMNMNMNNNMMMMMNNNNNNNNMMM","n":["ArgminAdd","ArgminConj","ArgminDiv","ArgminDot","ArgminEye","ArgminInv","ArgminL1Norm","ArgminL2Norm","ArgminMinMax","ArgminMul","ArgminRandom","ArgminScaledAdd","ArgminScaledSub","ArgminSignum","ArgminSub","ArgminTranspose","ArgminWeightedDot","ArgminZero","ArgminZeroLike","Error","Rng","add","as_ref","as_ref","backtrace","borrow","borrow_mut","chain","conj","context","deref","deref_mut","div","dot","downcast","downcast_mut","downcast_ref","drop","eye","eye_like","fill","fmt","fmt","from","from","from","from_subset","gen","gen_bool","gen_range","gen_ratio","into","inv","is","is_in_subset","l1_norm","l2_norm","max","min","msg","mul","new","rand_from_range","root_cause","sample","sample_iter","scaled_add","scaled_sub","signum","sub","t","to_string","to_subset","to_subset_unchecked","try_fill","try_from","try_into","type_id","vzip","weighted_dot","zero","zero_like"],"q":[[0,"argmin_math"],[82,"anyhow"],[83,"core::error"],[84,"std::backtrace"],[85,"core::fmt"],[86,"core::marker"],[87,"core::result"],[88,"core::option"],[89,"rand::rng"],[90,"rand::distributions::uniform"],[91,"rand::distributions::distribution"],[92,"alloc::string"],[93,"rand_core::error"],[94,"core::any"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,3,3,8,3,3,3,12,13,3,3,3,3,19,19,20,3,3,3,3,3,3,20,20,20,20,3,31,3,3,32,33,34,34,3,35,3,36,3,20,20,39,40,41,42,43,3,3,3,20,3,3,3,3,47,48,49],"f":"`````````````````````{{{d{b}}{d{c}}}e{}{}}{{{d{f}}}{{d{h}}}}0{{{d{f}}}{{d{j}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{lc}}}{{d{le}}}{}{}}{{{d{f}}}n}{{{d{A`}}}A`}{{fc}f{AbAdAf}}{{{d{f}}}d}{{{d{lf}}}{{d{l}}}}{{{d{Ah}}{d{c}}}e{}{}}{{{d{Aj}}{d{c}}}e{}{}}{f{{Al{cf}}}{AbAnAdAf}}{{{d{lf}}}{{B`{{d{lc}}}}}{AbAnAdAf}}{{{d{f}}}{{B`{{d{c}}}}}{AbAnAdAf}}{{{d{lf}}}Bb}{BdBf}{{{d{Bf}}}Bf}{{{d{lBh}}{d{lc}}}Bb{BjBl}}{{{d{f}}{d{lBn}}}{{Al{BbC`}}}}0{Cbc{}}{cf{hAdAf}}{cc{}}{{{d{c}}}e{}{}}{{{d{lBh}}}c{}}{{{d{lBh}}Cd}Cf}{{{d{lBh}}e}cCh{{Cj{c}}}}{{{d{lBh}}ClCl}Cf}{ce{}{}}{{{d{Cn}}}{{Al{cf}}}{}}{{{d{f}}}Cf}{{{d{c}}}Cf{}}{{{d{D`}}}c{}}{{{d{Db}}}c{}}{{{d{Dd}}{d{Dd}}}Dd}0{cf{AbAnAdAf}}{{{d{Df}}{d{c}}}e{}{}}?{{{d{Dh}}{d{Dh}}{d{lc}}}DhBh}{{{d{f}}}{{d{h}}}}{{{d{lBh}}e}c{}{{Dj{c}}}}{{Bhe}{{Dl{eBhc}}}{}{{Dj{c}}}}{{{d{Dn}}{d{c}}{d{e}}}g{}{}{}}{{{d{E`}}{d{c}}{d{e}}}g{}{}{}}{EbEb}{{{d{Ed}}{d{c}}}e{}{}}{Efc{}}{{{d{c}}}Eh{}}{{{d{c}}}{{B`{e}}}{}{}}{{{d{c}}}e{}{}}{{{d{lBh}}{d{lc}}}{{Al{BbEj}}}{BjBl}}{c{{Al{e}}}{}{}}0{{{d{c}}}El{}}{ce{}{}}{{{d{En}}{d{c}}{d{e}}}g{}{}{}}{{}F`}{{{d{Fb}}}Fb}","D":"Gn","p":[[10,"ArgminAdd",0],[1,"reference"],[5,"Error",0,82],[10,"Error",83],[5,"Backtrace",84],[0,"mut"],[5,"Chain",82],[10,"ArgminConj",0],[10,"Display",85],[10,"Send",86],[10,"Sync",86],[10,"ArgminDiv",0],[10,"ArgminDot",0],[6,"Result",87],[10,"Debug",85],[6,"Option",88],[1,"unit"],[1,"usize"],[10,"ArgminEye",0],[10,"Rng",0,89],[10,"Fill",89],[10,"Sized",86],[5,"Formatter",85],[5,"Error",85],[1,"never"],[1,"f64"],[1,"bool"],[10,"SampleUniform",90],[10,"SampleRange",90],[1,"u32"],[10,"ArgminInv",0],[10,"ArgminL1Norm",0],[10,"ArgminL2Norm",0],[10,"ArgminMinMax",0],[10,"ArgminMul",0],[10,"ArgminRandom",0],[10,"Distribution",91],[5,"DistIter",91],[10,"ArgminScaledAdd",0],[10,"ArgminScaledSub",0],[10,"ArgminSignum",0],[10,"ArgminSub",0],[10,"ArgminTranspose",0],[5,"String",92],[5,"Error",93],[5,"TypeId",94],[10,"ArgminWeightedDot",0],[10,"ArgminZero",0],[10,"ArgminZeroLike",0]],"r":[[19,82],[20,89]],"b":[[22,"impl-AsRef%3Cdyn+Error+%2B+Send+%2B+Sync%3E-for-Error"],[23,"impl-AsRef%3Cdyn+Error%3E-for-Error"],[41,"impl-Debug-for-Error"],[42,"impl-Display-for-Error"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABMACQAXAAEAGgABAB8AAQAmAAAAKgADAC8AAAA3AAAASAACAEwAAwA="}],\
["argmin_observer_paramwriter",{"t":"PPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Binary","JSON","ParamWriter","ParamWriterFormat","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","eq","eq","extension","fmt","fmt","from","from","from_subset","from_subset","into","into","is_in_subset","is_in_subset","new","observe_iter","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"argmin_observer_paramwriter"],[42,"core::fmt"],[43,"core::convert"],[44,"argmin::core::kv"],[45,"anyhow"],[46,"core::result"],[47,"argmin::core::state"],[48,"core::option"],[49,"core::any"]],"i":[4,4,0,0,3,4,3,4,3,4,3,4,4,3,4,4,3,4,3,4,3,4,3,4,3,4,3,3,3,4,3,4,3,4,3,4,3,4,3,4,3,4],"f":"````{{{b{c}}}{{b{e}}}{}{}}0{{{b{dc}}}{{b{de}}}{}{}}0{{{b{f}}}f}{{{b{h}}}h}{{{b{c}}{b{de}}}j{}{}}0{{}h}{{{b{f}}{b{f}}}l}{{{b{h}}{b{h}}}l}{{{b{h}}}{{b{n}}}}{{{b{f}}{b{dA`}}}Ab}{{{b{h}}{b{dA`}}}Ab}{cc{}}0{{{b{c}}}e{}{}}0{ce{}{}}0{{{b{c}}}l{}}0{{cch}f{{Ad{n}}}}{{{b{df}}{b{c}}{b{Af}}}{{Aj{jAh}}}Al}44{{{b{c}}}{{An{e}}}{}{}}055{c{{Aj{e}}}{}{}}000{{{b{c}}}B`{}}066","D":"Ad","p":[[1,"reference"],[0,"mut"],[5,"ParamWriter",0],[6,"ParamWriterFormat",0],[1,"unit"],[1,"bool"],[1,"str"],[5,"Formatter",42],[8,"Result",42],[10,"AsRef",43],[5,"KV",44],[5,"Error",45],[6,"Result",46],[10,"State",47],[6,"Option",48],[5,"TypeId",49]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACAABAAFAA0AFQABABkAAQAcAA4A"}],\
["argmin_observer_slog",{"t":"FNNNNNNNNNNNNNNNNNNN","n":["SlogLogger","borrow","borrow_mut","clone","clone_into","from","from_subset","into","is_in_subset","observe_init","observe_iter","term","term_noblock","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip"],"q":[[0,"argmin_observer_slog"],[20,"argmin::core::kv"],[21,"anyhow"],[22,"core::result"],[23,"argmin::core::state"],[24,"core::option"],[25,"core::any"]],"i":[0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],"f":"`{{{b{c}}}{{b{e}}}{}{}}{{{b{dc}}}{{b{de}}}{}{}}{{{b{f}}}f}{{{b{c}}{b{de}}}h{}{}}{cc{}}{{{b{c}}}e{}{}}{ce{}{}}{{{b{c}}}j{}}{{{b{df}}{b{l}}{b{c}}{b{n}}}{{Ab{hA`}}}Ad}{{{b{df}}{b{c}}{b{n}}}{{Ab{hA`}}}Ad}{{}f}05{{{b{c}}}{{Af{e}}}{}{}}6{c{{Ab{e}}}{}{}}0{{{b{c}}}Ah{}}7","D":"A`","p":[[1,"reference"],[0,"mut"],[5,"SlogLogger",0],[1,"unit"],[1,"bool"],[1,"str"],[5,"KV",20],[5,"Error",21],[6,"Result",22],[10,"State",23],[6,"Option",24],[5,"TypeId",25]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAwABAACAAMABwAAAAkAAAAOAAYA"}],\
["argmin_observer_spectator",{"t":"FNNNNNNNNNNNNNNNNNNNNNNNNN","n":["SpectatorBuilder","borrow","borrow_mut","build","channel_capacity","default","from","from_subset","host","into","is_in_subset","name","new","port","select","selected","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","with_channel_capacity","with_host","with_name","with_port"],"q":[[0,"argmin_observer_spectator"],[26,"argmin_observer_spectator::observer"],[27,"alloc::string"],[28,"core::convert"],[29,"std::collections::hash::set"],[30,"core::option"],[31,"core::result"],[32,"core::any"]],"i":[0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],"f":"`{{{b{c}}}{{b{e}}}{}{}}{{{b{dc}}}{{b{de}}}{}{}}`{{{b{f}}}h}{{}f}{cc{}}{{{b{c}}}e{}{}}{{{b{f}}}{{b{j}}}}{ce{}{}}{{{b{c}}}l{}}25{{{b{f}}}n}{{f{b{{A`{c}}}}}f{{Ad{Ab}}}}{{{b{f}}}{{b{{Af{j}}}}}}{{{b{c}}}{{Ah{e}}}{}{}}7{c{{Aj{e}}}{}{}}0{{{b{c}}}Al{}}7{{fh}f}{{fc}f{{Ad{Ab}}}}0{{fn}f}","D":"B`","p":[[1,"reference"],[0,"mut"],[5,"SpectatorBuilder",0,26],[1,"usize"],[5,"String",27],[1,"bool"],[1,"u16"],[1,"slice"],[1,"str"],[10,"AsRef",28],[5,"HashSet",29],[6,"Option",30],[6,"Result",31],[5,"TypeId",32]],"r":[[0,26]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAoABQACAAEABgAAAAgAAAALAAAAEQAFAA=="}],\
["argmin_testfunctions",{"t":"HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH","n":["ackley","ackley_abc","ackley_abc_derivative","ackley_abc_derivative_const","ackley_abc_hessian","ackley_abc_hessian_const","ackley_derivative","ackley_derivative_const","ackley_hessian","ackley_hessian_const","beale","beale_derivative","beale_hessian","booth","booth_derivative","booth_hessian","bukin_n6","bukin_n6_derivative","bukin_n6_hessian","cross_in_tray","cross_in_tray_derivative","cross_in_tray_hessian","easom","easom_derivative","easom_hessian","eggholder","eggholder_derivative","eggholder_hessian","goldsteinprice","goldsteinprice_derivative","goldsteinprice_hessian","himmelblau","himmelblau_derivative","himmelblau_hessian","holder_table","holder_table_derivative","holder_table_hessian","levy","levy_derivative","levy_derivative_const","levy_hessian","levy_hessian_const","levy_n13","levy_n13_derivative","levy_n13_hessian","matyas","matyas_derivative","matyas_hessian","mccorminck","mccorminck_derivative","mccorminck_hessian","picheny","picheny_derivative","picheny_hessian","rastrigin","rastrigin_a","rastrigin_a_derivative","rastrigin_a_derivative_const","rastrigin_a_hessian","rastrigin_a_hessian_const","rastrigin_derivative","rastrigin_derivative_const","rastrigin_hessian","rastrigin_hessian_const","rosenbrock","rosenbrock_ab","rosenbrock_ab_derivative","rosenbrock_ab_derivative_const","rosenbrock_ab_hessian","rosenbrock_ab_hessian_const","rosenbrock_derivative","rosenbrock_derivative_const","rosenbrock_hessian","rosenbrock_hessian_const","schaffer_n2","schaffer_n2_derivative","schaffer_n2_hessian","schaffer_n4","schaffer_n4_derivative","schaffer_n4_hessian","sphere","sphere_derivative","sphere_derivative_const","sphere_hessian","sphere_hessian_const","styblinski_tang","styblinski_tang_derivative","styblinski_tang_derivative_const","styblinski_tang_hessian","styblinski_tang_hessian_const","threehumpcamel","threehumpcamel_derivative","threehumpcamel_hessian","zero","zero_derivative","zero_derivative_const","zero_hessian","zero_hessian_const"],"q":[[0,"argmin_testfunctions"],[98,"num_traits::float"],[99,"num_traits::cast"],[100,"core::iter::traits::accum"],[101,"alloc::vec"],[102,"core::fmt"],[103,"core::convert"],[104,"core::ops::arith"],[105,"argmin_testfunctions::ackley"],[106,"argmin_testfunctions::beale"],[107,"argmin_testfunctions::booth"],[108,"argmin_testfunctions::bukin"],[109,"argmin_testfunctions::crossintray"],[110,"argmin_testfunctions::easom"],[111,"argmin_testfunctions::eggholder"],[112,"argmin_testfunctions::goldsteinprice"],[113,"argmin_testfunctions::himmelblau"],[114,"argmin_testfunctions::holdertable"],[115,"argmin_testfunctions::levy"],[116,"argmin_testfunctions::matyas"],[117,"argmin_testfunctions::mccorminck"],[118,"argmin_testfunctions::picheny"],[119,"argmin_testfunctions::rastrigin"],[120,"argmin_testfunctions::rosenbrock"],[121,"argmin_testfunctions::schaffer"],[122,"argmin_testfunctions::sphere"],[123,"argmin_testfunctions::styblinskitang"],[124,"argmin_testfunctions::threehumpcamel"],[125,"argmin_testfunctions::zero"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":"{{{d{{b{c}}}}}c{fhj}}{{{d{{b{c}}}}ccc}c{fhj}}{{{d{{b{c}}}}ccc}{{l{c}}}{fhj}}{{{d{{n{c}}}}ccc}{{n{c}}}{fhj}}{{{d{{b{c}}}}ccc}{{l{{l{c}}}}}{fhj}}{{{d{{n{c}}}}ccc}{{n{{n{c}}}}}{fhj}}{{{d{{b{c}}}}}{{l{c}}}{fhj}}{{{d{{n{c}}}}}{{n{c}}}{fhj}}{{{d{{b{c}}}}}{{l{{l{c}}}}}{fhjA`}}{{{d{{n{c}}}}}{{n{{n{c}}}}}{fhj}}{{{d{{n{c}}}}}c{fh}}{{{d{{n{c}}}}}{{n{c}}}{fh}}{{{d{{n{c}}}}}{{n{{n{c}}}}}{fh}}210210{{{d{{n{c}}}}}c{f{Ad{Ab}}h}}{{{d{{n{c}}}}}{{n{c}}}{f{Ad{Ab}}h}}{{{d{{n{c}}}}}{{n{{n{c}}}}}{f{Ad{Ab}}h}}543543543543543?98{{{d{{b{c}}}}}{{l{{l{c}}}}}{fhj}}7{{{d{{n{c}}}}}c{fhj}}:8765765765{{{d{{b{c}}}}}c{fhj}}{{{d{{b{c}}}}c}c{fhj}}{{{d{{b{c}}}}c}{{l{c}}}{fhj{Ad{Ab}}}}{{{d{{n{c}}}}c}{{n{c}}}{fhj{Ad{Ab}}}}{{{d{{b{c}}}}c}{{l{{l{c}}}}}{fhj{Ad{Ab}}}}{{{d{{b{c}}}}c}{{n{{n{c}}}}}{fhj{Ad{Ab}}}}{{{d{{b{c}}}}}{{l{c}}}{fhj{Ad{Ab}}}}{{{d{{n{c}}}}}{{n{c}}}{fhj{Ad{Ab}}}}{{{d{{b{c}}}}}{{l{{l{c}}}}}{fhj{Ad{Ab}}}}{{{d{{n{c}}}}}{{n{{n{c}}}}}{fhj{Ad{Ab}}}}9{{{d{{b{c}}}}cc}c{fhj}}{{{d{{b{c}}}}cc}{{l{c}}}{fhAf}}{{{d{{n{c}}}}cc}{{n{c}}}{fhAf}}{{{d{{b{c}}}}cc}{{l{{l{c}}}}}{fhAf}}{{{d{{n{c}}}}cc}{{n{{n{c}}}}}{fhAf}}{{{d{{b{c}}}}}{{l{c}}}{fhAf}}{{{d{{n{c}}}}}{{n{c}}}{fhAf}}{{{d{{b{c}}}}}{{l{{l{c}}}}}{fhAf}}{{{d{{n{c}}}}}{{n{{n{c}}}}}{fhAf}}{{{d{{n{c}}}}}c{fh}}{{{d{{n{c}}}}}{{n{c}}}{fh}}{{{d{{n{c}}}}}{{n{{n{c}}}}}{fh}}210{{{d{{b{c}}}}}c{fhj}}{{{d{{b{c}}}}}{{l{c}}}{fh}}3{{{d{{b{c}}}}}{{l{{l{c}}}}}{fh}}32{{{d{{b{c}}}}}{{l{c}}}{fhj}}{{{d{{n{c}}}}}{{n{c}}}{fhj}}{{{d{{b{c}}}}}{{l{{l{c}}}}}{fhj}}{{{d{{n{c}}}}}{{n{{n{c}}}}}{fhj}}987{{{d{{b{c}}}}}c{fh}}6958","D":"Lf","p":[[1,"slice"],[1,"reference"],[10,"Float",98],[10,"FromPrimitive",99],[10,"Sum",100],[5,"Vec",101],[1,"array"],[10,"Debug",102],[1,"f64"],[10,"Into",103],[10,"AddAssign",104]],"r":[[0,105],[1,105],[2,105],[3,105],[4,105],[5,105],[6,105],[7,105],[8,105],[9,105],[10,106],[11,106],[12,106],[13,107],[14,107],[15,107],[16,108],[17,108],[18,108],[19,109],[20,109],[21,109],[22,110],[23,110],[24,110],[25,111],[26,111],[27,111],[28,112],[29,112],[30,112],[31,113],[32,113],[33,113],[34,114],[35,114],[36,114],[37,115],[38,115],[39,115],[40,115],[41,115],[42,115],[43,115],[44,115],[45,116],[46,116],[47,116],[48,117],[49,117],[50,117],[51,118],[52,118],[53,118],[54,119],[55,119],[56,119],[57,119],[58,119],[59,119],[60,119],[61,119],[62,119],[63,119],[64,120],[65,120],[66,120],[67,120],[68,120],[69,120],[70,120],[71,120],[72,120],[73,120],[74,121],[75,121],[76,121],[77,121],[78,121],[79,121],[80,122],[81,122],[82,122],[83,122],[84,122],[85,123],[86,123],[87,123],[88,123],[89,123],[90,124],[91,124],[92,124],[93,125],[94,125],[95,125],[96,125],[97,125]],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["argmin_testfunctions_py",{"t":"QQ","n":["add_function","func"],"q":[[0,"argmin_testfunctions_py"]],"i":[0,0],"f":"``","D":"`","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAIAEAAAAAAAAQACAA=="}],\
["finitediff",{"t":"FINCNNNNNNNNONNNNCNOHHHHHHCHHHHHHHHCCHHHHHHHHHHHHHHHHHHHHCHHHHHHHHCCHHHHHHHHHHHHHH","n":["PerturbationVector","PerturbationVectors","add","array","borrow","borrow_mut","clone","clone_into","default","from","into","new","r_idx","to_owned","try_from","try_into","type_id","vec","vzip","x_idx","central_diff","central_hessian","central_hessian_vec_prod","central_jacobian","central_jacobian_pert","central_jacobian_vec_prod","diff","forward_diff","forward_hessian","forward_hessian_nograd","forward_hessian_nograd_sparse","forward_hessian_vec_prod","forward_jacobian","forward_jacobian_pert","forward_jacobian_vec_prod","hessian","jacobian","central_diff_const","forward_diff_const","central_hessian_const","central_hessian_vec_prod_const","forward_hessian_const","forward_hessian_nograd_const","forward_hessian_nograd_sparse_const","forward_hessian_vec_prod_const","central_jacobian_const","central_jacobian_pert_const","central_jacobian_vec_prod_const","forward_jacobian_const","forward_jacobian_pert_const","forward_jacobian_vec_prod_const","central_diff","central_hessian","central_hessian_vec_prod","central_jacobian","central_jacobian_pert","central_jacobian_vec_prod","diff","forward_diff","forward_hessian","forward_hessian_nograd","forward_hessian_nograd_sparse","forward_hessian_vec_prod","forward_jacobian","forward_jacobian_pert","forward_jacobian_vec_prod","hessian","jacobian","central_diff_vec","forward_diff_vec","central_hessian_vec","central_hessian_vec_prod_vec","forward_hessian_nograd_sparse_vec","forward_hessian_nograd_vec","forward_hessian_vec","forward_hessian_vec_prod_vec","central_jacobian_pert_vec","central_jacobian_vec","central_jacobian_vec_prod_vec","forward_jacobian_pert_vec","forward_jacobian_vec","forward_jacobian_vec_prod_vec"],"q":[[0,"finitediff"],[20,"finitediff::array"],[37,"finitediff::array::diff"],[39,"finitediff::array::hessian"],[45,"finitediff::array::jacobian"],[51,"finitediff::vec"],[68,"finitediff::vec::diff"],[70,"finitediff::vec::hessian"],[76,"finitediff::vec::jacobian"],[82,"finitediff::pert"],[83,"alloc::vec"],[84,"core::result"],[85,"core::any"],[86,"core::ops::function"],[87,"anyhow"],[88,"num_traits::float"],[89,"num_traits::cast"],[90,"core::ops::arith"]],"i":[0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":"``{{bd{f{d}}}b}`{{{h{c}}}{{h{e}}}{}{}}{{{h{jc}}}{{h{je}}}{}{}}{{{h{b}}}b}{{{h{c}}{h{je}}}l{}{}}{{}b}{cc{}}{ce{}{}}2`{{{h{c}}}e{}{}}{c{{n{e}}}{}{}}0{{{h{c}}}A`{}}`3`{{{h{Ab}}}{{`{{Ab{{h{{Ad{c}}}}}{{Af{{n{{Ad{c}}Ah}}}}}}}}}{AjAl}}{{{h{Ab}}}{{`{{Ab{{h{{Ad{c}}}}}{{Af{{n{{Ad{{Ad{c}}}}Ah}}}}}}}}}{AjAl}}{{{h{Ab}}}{{`{{Ab{{h{{Ad{c}}}}{h{{Ad{c}}}}}{{Af{{n{{Ad{c}}Ah}}}}}}}}}{AjAl}}1{{{h{Ab}}}{{`{{Ab{{h{{Ad{c}}}}{h{An}}}{{Af{{n{{Ad{{Ad{c}}}}Ah}}}}}}}}}{AjAlB`}}1`32{{{h{Ab}}}{{`{{Ab{{h{{Ad{c}}}}}{{Af{{n{{Ad{{Ad{c}}}}Ah}}}}}}}}}{AjAlB`}}{{{h{Ab}}}{{`{{Ab{{h{{Ad{c}}}}{f{{Ad{d}}}}}{{Af{{n{{Ad{{Ad{c}}}}Ah}}}}}}}}}{AjAlB`}}3423``{{{h{{Ad{c}}}}{h{Ab}}}{{n{{Ad{c}}Ah}}}{AjAl}}0{{{h{{Ad{c}}}}{h{Ab}}}{{n{{Ad{{Ad{c}}}}Ah}}}{AjAl}}{{{h{{Ad{c}}}}{h{Ab}}{h{{Ad{c}}}}}{{n{{Ad{c}}Ah}}}{AjAl}}1{{{h{{Ad{c}}}}{h{Ab}}}{{n{{Ad{{Ad{c}}}}Ah}}}{AjAlB`}}{{{h{{Ad{c}}}}{h{Ab}}{f{{Ad{d}}}}}{{n{{Ad{{Ad{c}}}}Ah}}}{AjAlB`}}23{{{h{{Ad{c}}}}{h{Ab}}{h{An}}}{{n{{Ad{{Ad{c}}}}Ah}}}{AjAlB`}}3403{{{h{Ab}}}{{`{{Ab{{h{{f{c}}}}}{{Af{{n{{f{c}}Ah}}}}}}}}}{AjAl}}{{{h{Ab}}}{{`{{Ab{{h{{f{c}}}}}{{Af{{n{{f{{f{c}}}}Ah}}}}}}}}}{AjAl}}{{{h{Ab}}}{{`{{Ab{{h{{f{c}}}}{h{{f{c}}}}}{{Af{{n{{f{c}}Ah}}}}}}}}}{AjAl}}1{{{h{Ab}}}{{`{{Ab{{h{{f{c}}}}{h{An}}}{{Af{{n{{f{{f{c}}}}Ah}}}}}}}}}{AjAlB`}}1`32{{{h{Ab}}}{{`{{Ab{{h{{f{c}}}}}{{Af{{n{{f{{f{c}}}}Ah}}}}}}}}}{AjAlB`}}{{{h{Ab}}}{{`{{Ab{{h{{f{c}}}}{f{{Ad{d}}}}}{{Af{{n{{f{{f{c}}}}Ah}}}}}}}}}{AjAlB`}}3423``{{{h{{Bb{c}}}}{h{Ab}}}{{n{{f{c}}Ah}}}{AjAl}}{{{h{{f{c}}}}{h{Ab}}}{{n{{f{c}}Ah}}}Aj}{{{h{{Bb{c}}}}{h{Ab}}}{{n{{f{{f{c}}}}Ah}}}{AjAl}}{{{h{{Bb{c}}}}{h{Ab}}{h{{Bb{c}}}}}{{n{{f{c}}Ah}}}{AjAl}}{{{h{{f{c}}}}{h{Ab}}{f{{Ad{d}}}}}{{n{{f{{f{c}}}}Ah}}}{AjAlB`}}{{{h{{f{c}}}}{h{Ab}}}{{n{{f{{f{c}}}}Ah}}}{AjAlB`}}{{{h{{f{c}}}}{h{Ab}}}{{n{{f{{f{c}}}}Ah}}}{AjAl}}{{{h{{f{c}}}}{h{Ab}}{h{{Bb{c}}}}}{{n{{f{c}}Ah}}}Aj}{{{h{{Bb{c}}}}{h{Ab}}{h{An}}}{{n{{f{{f{c}}}}Ah}}}{AjAlB`}}65{{{h{{f{c}}}}{h{Ab}}{h{An}}}{{n{{f{{f{c}}}}Ah}}}{AjAlB`}}32","D":"Ab","p":[[5,"PerturbationVector",0,82],[1,"usize"],[5,"Vec",83],[1,"reference"],[0,"mut"],[1,"unit"],[6,"Result",84],[5,"TypeId",85],[10,"Fn",86],[1,"array"],[17,"Output"],[5,"Error",87],[10,"Float",88],[10,"FromPrimitive",89],[8,"PerturbationVectors",0,82],[10,"AddAssign",90],[1,"slice"]],"r":[[0,82],[1,82]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEkAAwAEAAUADgAFABUAPQA="}],\
["spectator",{"t":"PSPGPPPPNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOO","n":["BestParam","DEFAULT_PORT","FuncCounts","Message","NewRun","Param","Samples","Termination","borrow","borrow_mut","clone","clone_into","deserialize","eq","fmt","from","from_subset","into","is_in_subset","pack","serialize","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","unpack","vzip","init_param","iter","iter","iter","iter","kv","kv","max_iter","name","name","name","name","name","name","param","param","selected","settings","solver","target_cost","termination_status","termination_status","time"],"q":[[0,"spectator"],[29,"spectator::Message"],[52,"spectator::message"],[53,"core::result"],[54,"serde::de"],[55,"core::fmt"],[56,"bytes::bytes"],[57,"anyhow"],[58,"serde::ser"],[59,"core::option"],[60,"core::any"],[61,"bytes::bytes_mut"]],"i":[3,0,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,16,17,18,19,20,17,18,16,16,17,18,19,20,21,19,20,16,16,16,16,17,21,17],"f":"````````{{{b{c}}}{{b{e}}}{}{}}{{{b{dc}}}{{b{de}}}{}{}}{{{b{f}}}f}{{{b{c}}{b{de}}}h{}{}}{c{{j{f}}}l}{{{b{f}}{b{f}}}n}{{{b{f}}{b{dA`}}}Ab}{cc{}}{{{b{c}}}e{}{}}{ce{}{}}{{{b{c}}}n{}}{{{b{f}}}{{j{AdAf}}}}{{{b{f}}c}jAh}4{{{b{c}}}{{Aj{e}}}{}{}}5{c{{j{e}}}{}{}}0{{{b{c}}}Al{}}{{{b{An}}}{{j{fAf}}}}7```````````````````````","D":"Dh","p":[[1,"reference"],[0,"mut"],[6,"Message",0,52],[1,"unit"],[6,"Result",53],[10,"Deserializer",54],[1,"bool"],[5,"Formatter",55],[8,"Result",55],[5,"Bytes",56],[5,"Error",57],[10,"Serializer",58],[6,"Option",59],[5,"TypeId",60],[5,"BytesMut",61],[15,"NewRun",29],[15,"Samples",29],[15,"FuncCounts",29],[15,"Param",29],[15,"BestParam",29],[15,"Termination",29]],"r":[[3,52]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABAABQAJAAYAEQAAABMAAAAVAAYAHQAAAA=="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
